{"version":3,"sources":["components/Web3Info/index.js","components/Modals/LoadSafeModal.js","components/Modals/FundSafeModal.js","components/Modals/EnableRecoveryModal.js","components/GnosisSafe/index.js","components/Header/index.js","components/InstructionsCard/index.js","App.js","serviceWorker.js","index.js","../../contract-proxy-kit/src/index.js"],"names":["Web3Info","props","web3","account","useState","balance","setBalance","getBalance","useCallback","a","eth","useEffect","Card","maxWidth","my","mx","p","px","Heading","as","textAlign","Box","m","EthAddress","address","textLabels","Text","utils","fromWei","toBN","LoadSafeModal","setSafeAddress","createSafe","isOpen","setIsOpen","Button","width","onClick","Modal","Form","onSubmit","h3","Input","mt","type","required","placeholder","onChange","e","target","value","Flex","py","borderTop","borderColor","justifyContent","Outline","ml","FundSafeModal","cpk","notifyConfirmation","CPK","isOwner","amount","setAmount","isOpenDeposit","setIsOpenDeposit","isOpenWithdraw","setIsOpenWithdraw","withdraw","preventDefault","execTransactions","operation","CALL","to","toWei","data","promiEvent","hash","on","sendTransaction","from","then","EnableRecoveryModal","gnosisSafe","answerRecoveryModule","answerRecoveryModuleMasterCopy","modules","getIsOwner","isOpenRecovery","setIsOpenRecovery","answer1","setAnswer1","answer2","setAnswer2","answer3","setAnswer3","enableRecovery","gnosisSafeContract","Contract","masterCopyAddress","answerRecoveryModuleContract","methods","enableModule","encodeABI","enableModuleData","answer","keccak256","setup","enableRecoveryData","gas","recoverSafe","recoverAccess","send","length","pt","Field","label","GnosisSafe","notify","networkId","networkIdToUrl","undefined","setCpk","setModules","setIsOwner","safeAddress","load","ownerAccount","create","getCode","call","getModules","emitter","transaction","onclick","window","open","Flash","variant","Header","bg","flexDirection","fontSize","color","React","Component","InstructionsCard","mr","Icon","name","size","lineHeight","Link","href","title","display","alignItems","mb","App","currentState","Web3","givenProvider","BNC_APIKey","process","connected","setConnected","Notify","dappId","onboard","Onboard","subscriptions","wallet","provider","init","walletSelect","walletCheck","getState","Boolean","location","hostname","match","ReactDOM","render","StrictMode","BaseStyles","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","safeAbi","constant","payable","stateMutability","inputs","outputs","cpkFactoryAbi","multiSendAbi","defaultNetworks","1","proxyFactoryAddress","multiSendAddress","fallbackHandlerAddress","4","5","42","zeroAddress","repeat","predeterminedSaltNonce","ethers","signer","networks","this","apiType","Error","setOwnerAccount","opts","net","getId","getNetwork","chainId","networkID","network","getOwnerAccount","currentProvider","_web3Provider","wc","connection","peerMeta","startsWith","isConnectedToSafe","multiSend","contract","proxyFactory","create2Salt","abi","encodeParameters","t","v","options","proxyCreationCode","soliditySha3","slice","toChecksumAddress","abiToViewAbi","map","rest","Object","assign","viewContract","viewProxyFactory","defaultAbiCoder","encode","solidityKeccak256","getAddress","defaultAccount","getAccounts","transactions","signatureForAddress","replace","toLowerCase","toConnectedSafeTransactions","txs","sendOptions","promiEventToPromise","Promise","resolve","reject","once","checkSingleCall","attemptTransaction","methodName","params","err","attemptSafeProviderSendTx","txObj","attemptSafeProviderMultiSendTxs","host","jsonrpc","id","Date","getTime","method","result","codeAtAddress","getContractAddress","encodeMultiSendCalldata","tx","encodeParameter","hexToBytes","join","functions","transactionResponse","interface","hexlify","concat","solidityPack","hexDataLength","DELEGATECALL","module","exports"],"mappings":"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","file":"static/js/main.4e550811.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Box, Text, Heading, EthAddress, Card } from \"rimble-ui\";\n\nexport default function Web3Info(props) {\n  const { web3, account} = props;\n  const [balance, setBalance] = useState(0);\n\n  let getBalance = useCallback( async () => {\n    let balance = await web3.eth.getBalance(account);\n    setBalance(balance);\n  }, [web3, account]);\n\n  useEffect(() => {\n    if(web3 !== null)\n      getBalance();\n  }, [web3, getBalance]);\n\n  return (\n    <div>\n      {web3 && (\n        <Card maxWidth={'420px'} my={2} mx={'auto'} p={3} px={4}>\n          <Heading as={\"h2\"} p={3} textAlign='center'>Account Info</Heading>\n          <Box m={2}>\n            <Heading as={\"h3\"}>Address: </Heading>\n            <EthAddress address={account} textLabels />\n          </Box>\n          <Box m={2}>\n            <Heading as={\"h3\"}>Balance: </Heading>\n            <Text>{web3.utils.fromWei(web3.utils.toBN(balance))} eth</Text>\n          </Box>\n        </Card>\n        )\n      }\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { Form, Input, Flex, Modal, Box, Heading, Card, Button } from \"rimble-ui\";\n\nexport default function LoadSafeModal (props){\n  const { setSafeAddress,  createSafe } = props;\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div>\n      <Button width={1} m={2} onClick={() => { setIsOpen(true) }}>Load Existing Safe</Button>\n      <Modal isOpen={isOpen}>\n        <Card p={0}>\n          <Form onSubmit={createSafe} >\n            <Box p={4} >\n              <Heading.h3>Safe address</Heading.h3>\n              <Input\n                width={1}\n                mt={3}\n                type=\"text\"\n                required={true}\n                placeholder=\"e.g. 0xAc03BB73b6a9e108530AFf4Df5077c2B3D481e5A\"\n                onChange={e => {setSafeAddress(e.target.value)}}\n              />\n            </Box>\n\n            <Flex\n              px={4}\n              py={3}\n              borderTop={1}\n              borderColor={\"#E8E8E8\"}\n              justifyContent={\"flex-end\"}\n            >\n              <Button.Outline onClick={() => {setIsOpen(false)}}>Cancel</Button.Outline>\n              <Button type='submit' ml={3}>Load Safe</Button>\n            </Flex>\n          </Form>\n        </Card>\n      </Modal>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { Form, Input, Flex, Modal, Box, Heading, Card, Button } from \"rimble-ui\";\n\nexport default function FundSafeModal (props){\n  const {web3, cpk, notifyConfirmation, account, CPK, getBalance, isOwner} = props;\n  const [amount, setAmount] = useState(0);\n  const [isOpenDeposit, setIsOpenDeposit] = useState(false);\n  const [isOpenWithdraw, setIsOpenWithdraw] = useState(false);\n\n  let withdraw = async (e) => {\n    e.preventDefault();\n    const { promiEvent, hash } = await cpk.execTransactions([\n      {\n        operation: CPK.CALL,\n        to: account,\n        value: web3.utils.toWei(amount),\n        data: '0x',\n      }\n    ]);\n\n    setIsOpenWithdraw(false);\n    notifyConfirmation(hash);\n    promiEvent.on('confirmation', () => {\n      getBalance(cpk);\n    });\n  };\n\n  function deposit(e) {\n    e.preventDefault();\n    web3.eth.sendTransaction({\n      from: account,\n      to: cpk.address,\n      value: web3.utils.toWei(amount)})\n      .on('transactionHash', hash => {\n        setIsOpenDeposit(false);\n        notifyConfirmation(hash);\n      }).then(async () => {\n        getBalance(cpk);\n      });\n  };\n\n  return (\n    <div>\n      {isOwner ? (\n        <Box>\n          <Button width={1/3} mx={4} my={2} onClick={() => { setIsOpenDeposit(true) }}>Deposit</Button>\n          <Button width={1/3} mx={3} my={2} onClick={() => { setIsOpenWithdraw(true) }}>Withdraw</Button>\n        </Box>\n      ) : (\n        <Button width={1} my={2} onClick={() => { setIsOpenDeposit(true) }}>Deposit</Button>\n      )}\n      <Modal isOpen={isOpenDeposit}>\n        <Card p={0}>\n          <Form onSubmit={deposit} >\n            <Box p={4} >\n              <Heading.h3>Amount</Heading.h3>\n              <Input\n                width={1}\n                mt={3}\n                type=\"text\"\n                required={true}\n                placeholder=\"e.g. 0.01\"\n                onChange={e => {setAmount(e.target.value)}}\n              />\n            </Box>\n\n            <Flex\n              px={4}\n              py={3}\n              borderTop={1}\n              borderColor={\"#E8E8E8\"}\n              justifyContent={\"flex-end\"}\n            >\n              <Button.Outline onClick={() => {setIsOpenDeposit(false)}}>Cancel</Button.Outline>\n              <Button type=\"submit\" ml={3}>Deposit</Button>\n            </Flex>\n          </Form>\n        </Card>\n      </Modal>\n      <Modal isOpen={isOpenWithdraw}>\n        <Card p={0}>\n          <Form onSubmit={withdraw} >\n            <Box p={4} >\n              <Heading.h3>Amount</Heading.h3>\n              <Input\n                width={1}\n                mt={3}\n                type=\"text\"\n                required={true}\n                placeholder=\"e.g. 0.01\"\n                onChange={e => {setAmount(e.target.value)}}\n              />\n            </Box>\n\n            <Flex\n              px={4}\n              py={3}\n              borderTop={1}\n              borderColor={\"#E8E8E8\"}\n              justifyContent={\"flex-end\"}\n            >\n              <Button.Outline onClick={() => {setIsOpenWithdraw(false)}}>Cancel</Button.Outline>\n              <Button type=\"submit\" ml={3}>Withdraw</Button>\n            </Flex>\n          </Form>\n        </Card>\n      </Modal>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { Field, Form, Flex, Modal, Box, Heading, Card, Button } from \"rimble-ui\";\n\nexport default function EnableRecoveryModal (props){\n  const { web3, cpk, CPK, gnosisSafe, answerRecoveryModule, answerRecoveryModuleMasterCopy, notifyConfirmation, getBalance, account, isOwner, modules, getIsOwner} = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenRecovery, setIsOpenRecovery] = useState(false);\n  const [answer1, setAnswer1] = useState('');\n  const [answer2, setAnswer2] = useState('');\n  const [answer3, setAnswer3] = useState('');\n\n  let enableRecovery = async (e) => {\n    e.preventDefault();\n    let gnosisSafeContract = new web3.eth.Contract(gnosisSafe, cpk.masterCopyAddress);\n    let answerRecoveryModuleContract = new web3.eth.Contract(answerRecoveryModule, answerRecoveryModuleMasterCopy);\n    let enableModuleData = await gnosisSafeContract.methods.enableModule(answerRecoveryModuleMasterCopy).encodeABI();\n    let answer = answer1 + answer2 + answer3;\n    answer = web3.utils.keccak256(answer);\n    let setupData = await answerRecoveryModuleContract.methods.setup().encodeABI();\n    let enableRecoveryData = await answerRecoveryModuleContract.methods.enableRecovery(answer).encodeABI();\n\n    // Disable Module\n    // const Address1 = \"0x\".padEnd(41, '0') + \"1\"\n    // let disableModuleData = await gnosisSafeContract.methods.disableModule(Address1, modules[0]).encodeABI();\n\n    const { promiEvent, hash } = await cpk.execTransactions([\n      // {\n      //   operation: CPK.CALL,\n      //   to: answerRecoveryModuleMasterCopy,\n      //   value: 0,\n      //   data: setupData,\n      // },\n      {\n        operation: CPK.CALL,\n        to: cpk.address,\n        value: 0,\n        data: enableModuleData,\n      },\n      {\n        operation: CPK.CALL,\n        to: answerRecoveryModuleMasterCopy,\n        value: 0,\n        data: enableRecoveryData,\n      },\n      // {\n      //   operation: CPK.CALL,\n      //   to: cpk.address,\n      //   value: 0,\n      //   data: disableModuleData,\n      // }\n    ], {gas: 1000000});\n\n    setIsOpen(false);\n    notifyConfirmation(hash);\n    promiEvent.on('confirmation', () => {\n      getBalance(cpk);\n    });\n  };\n\n  let recoverSafe = async (e) => {\n    e.preventDefault();\n    let answerRecoveryModuleContract = new web3.eth.Contract(answerRecoveryModule, answerRecoveryModuleMasterCopy);\n    let answer = answer1 + answer2 + answer3;\n    answer = web3.utils.keccak256(answer);\n    answerRecoveryModuleContract.methods.recoverAccess(answer, account).send({from: account}).on('transactionHash', hash => {\n      setIsOpenRecovery(false);\n      notifyConfirmation(hash);\n    }).on('confirmation', () => {\n      getBalance(cpk);\n      getIsOwner(cpk);\n    });\n  };\n\n  return (\n    <div>\n      {/*\n        <Card maxWidth={'420px'} mx={'auto'} my={2} p={3} px={4}>\n          <Heading as={\"h2\"} p={3} textAlign='center'>Disable Module</Heading>\n          <Button width={1} m={2} onClick={() => { setIsOpen(true) }}>Disable Module</Button>\n        </Card>\n      */}\n      {modules.length === 0 && isOwner && (\n        <Card maxWidth={'420px'} mx={'auto'} my={2} p={3} px={4}>\n          <Heading as={\"h2\"} p={3} textAlign='center'>Enable Recovery</Heading>\n          <Button width={1} m={2} onClick={() => { setIsOpen(true) }}>Enable Recovery</Button>\n        </Card>\n      )}\n      {modules.length > 0 && !isOwner && (\n        <Card maxWidth={'420px'} mx={'auto'} my={2} p={3} px={4}>\n          <Heading as={\"h2\"} p={3} textAlign='center'>Recover Safe</Heading>\n          <Button width={1} m={2} onClick={() => {setIsOpenRecovery(true)}}>Recover Safe</Button>\n        </Card>\n      )}\n      <Modal isOpen={isOpen}>\n        <Card p={0}>\n          <Form onSubmit={enableRecovery} >\n            <Heading.h3 pt={2} textAlign=\"center\">Recovery Questions</Heading.h3>\n            <Box p={4} >\n              <Field label=\"What's your favourite car?\" width={1}>\n                <Form.Input\n                  width={1}\n                  mt={3}\n                  type=\"text\"\n                  required={true}\n                  placeholder=\"e.g. Toyota\"\n                  onChange={(e) => setAnswer1(e.target.value)}\n                />\n              </Field>\n              <Field label=\"What's your favourite animal?\" width={1}>\n                <Form.Input\n                  width={1}\n                  mt={3}\n                  type=\"text\"\n                  required={true}\n                  placeholder=\"e.g. Cow\"\n                  onChange={(e) => setAnswer2(e.target.value)}\n                />\n              </Field>\n              <Field label=\"What's your favourite city?\" width={1}>\n                <Form.Input\n                  width={1}\n                  mt={3}\n                  type=\"text\"\n                  required={true}\n                  placeholder=\"e.g. Sydney\"\n                  onChange={(e) => setAnswer3(e.target.value)}\n                />\n              </Field>\n            </Box>\n\n            <Flex\n              px={4}\n              py={3}\n              borderTop={1}\n              borderColor={\"#E8E8E8\"}\n              justifyContent={\"flex-end\"}\n            >\n              <Button.Outline onClick={() => {setIsOpen(false)}}>Cancel</Button.Outline>\n              <Button type='submit' ml={3}>Enable Recovery</Button>\n            </Flex>\n          </Form>\n        </Card>\n      </Modal>\n      <Modal isOpen={isOpenRecovery}>\n        <Card p={0}>\n          <Form onSubmit={recoverSafe} >\n            <Heading.h3 pt={2} textAlign=\"center\">Recovery Questions</Heading.h3>\n            <Box p={4} >\n              <Field label=\"What's your favourite car?\" width={1}>\n                <Form.Input\n                  width={1}\n                  mt={3}\n                  type=\"text\"\n                  required={true}\n                  placeholder=\"e.g. Toyota\"\n                  onChange={(e) => setAnswer1(e.target.value)}\n                />\n              </Field>\n              <Field label=\"What's your favourite animal?\" width={1}>\n                <Form.Input\n                  width={1}\n                  mt={3}\n                  type=\"text\"\n                  required={true}\n                  placeholder=\"e.g. Cow\"\n                  onChange={(e) => setAnswer2(e.target.value)}\n                />\n              </Field>\n              <Field label=\"What's your favourite city?\" width={1}>\n                <Form.Input\n                  width={1}\n                  mt={3}\n                  type=\"text\"\n                  required={true}\n                  placeholder=\"e.g. Sydney\"\n                  onChange={(e) => setAnswer3(e.target.value)}\n                />\n              </Field>\n            </Box>\n\n            <Flex\n              px={4}\n              py={3}\n              borderTop={1}\n              borderColor={\"#E8E8E8\"}\n              justifyContent={\"flex-end\"}\n            >\n              <Button.Outline onClick={() => {setIsOpenRecovery(false)}}>Cancel</Button.Outline>\n              <Button type='submit' ml={3}>Recover Safe</Button>\n            </Flex>\n          </Form>\n        </Card>\n      </Modal>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { Flash, Box, Text, Heading, EthAddress, Card, Button } from \"rimble-ui\";\nimport CPK from 'contract-proxy-kit';\nimport gnosisSafe from '../../abis/GnosisSafe.json';\nimport answerRecoveryModule from '../../abis/AnswerRecoveryModule.json';\nimport LoadSafeModal from '../Modals/LoadSafeModal.js';\nimport FundSafeModal from '../Modals/FundSafeModal.js';\nimport EnableRecoveryModal from '../Modals/EnableRecoveryModal.js';\n\nexport default function GnosisSafe(props){\n  const { web3, notify, account, networkId, networkIdToUrl } = props;\n  const [cpk, setCpk] = useState(undefined);\n  const [modules, setModules] = useState([]);\n  const [balance, setBalance] = useState(0);\n  const [isOwner, setIsOwner] = useState(false);\n  const [safeAddress, setSafeAddress] = useState(\"\");\n\n  const answerRecoveryModuleMasterCopy = \"0xf949A120293e2F50e6f03fFdc0Cb5bC11984AE84\";\n\n  let createSafe = async (e) => {\n    e.preventDefault();\n    if(safeAddress)\n      CPK.load({ web3, ownerAccount: account }, safeAddress).then(cpk => {\n        getIsOwner(cpk);\n        setCpk(cpk);\n        getBalance(cpk);\n      })\n    else\n      CPK.create({web3, ownerAccount: account}).then(cpk => {\n        setCpk(cpk);\n        getBalance(cpk);\n        getIsOwner(cpk);\n      })\n  };\n\n  let getIsOwner = async (cpk) => {\n    let getCode = await web3.eth.getCode(cpk.address);\n    if(getCode === \"0x\")\n      return setIsOwner(true);\n    let gnosisSafeContract = new web3.eth.Contract(gnosisSafe, cpk.address);\n    let isOwner = await gnosisSafeContract.methods.isOwner(account).call();\n    setIsOwner(isOwner);\n  }\n\n  let getModules = async (cpk, balance) => {\n    let getCode = await web3.eth.getCode(cpk.address);\n    if( balance === 0 || getCode === \"0x\" )\n      return;\n    let gnosisSafeContract = new web3.eth.Contract(gnosisSafe, cpk.address);\n    let modules = await gnosisSafeContract.methods.getModules().call();\n    setModules(modules);\n  }\n\n  let getBalance = async (cpk) => {\n    let balance = await web3.eth.getBalance(cpk.address);\n    setBalance(balance);\n    getModules(cpk, balance);\n  };\n\n  function notifyConfirmation(hash){\n    const {emitter} = notify.hash(hash);\n    emitter.on('all', (transaction) => {\n      return {\n        onclick: () => {\n          window.open(`${networkIdToUrl[networkId]}/${transaction.hash}`)\n        }\n      }\n    });\n  }\n\n  return (\n    <div>\n      <Card maxWidth={'420px'} mx={'auto'} my={2} p={3} px={4}>\n        <Heading as={\"h2\"} p={3} textAlign='center'>Gnosis Safe Info</Heading>\n        {cpk === undefined ? (\n          <div>\n            <Button width={1} m={2} onClick={createSafe}>Use Default Safe</Button>\n            <Text textAlign='center'>Or</Text>\n            <LoadSafeModal setSafeAddress={setSafeAddress} createSafe={createSafe} />\n          </div>\n        ) : (\n          <div>\n            {isOwner ? (\n              <Flash my={2} variant=\"info\">\n                You are the owner of this Safe\n              </Flash>\n            ) : (\n              <div>\n                <Flash my={2} variant=\"warning\">\n                  You are not the owner of this Safe\n                </Flash>\n              </div>\n            )}\n            <Box p={2}>\n              <Heading as={\"h3\"}>Address: </Heading>\n              <EthAddress address={cpk.address} textLabels />\n            </Box>\n            <Box p={2}>\n              <Heading as={\"h3\"}>Balance: </Heading>\n              <Text>{web3.utils.fromWei(web3.utils.toBN(balance))} eth</Text>\n              <FundSafeModal web3={web3} cpk={cpk} notifyConfirmation={notifyConfirmation} account={account} CPK={CPK} getBalance={getBalance} isOwner={isOwner} />\n              <EnableRecoveryModal web3={web3} cpk={cpk} gnosisSafe={gnosisSafe} answerRecoveryModule={answerRecoveryModule} answerRecoveryModuleMasterCopy={answerRecoveryModuleMasterCopy} notifyConfirmation={notifyConfirmation} getBalance={getBalance} CPK={CPK} account={account} isOwner={isOwner} modules={modules} getIsOwner={getIsOwner}/>\n            </Box>\n          </div>\n        )}\n      </Card>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { Box, Heading } from \"rimble-ui\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Box bg=\"primary\" p={3} justifyContent=\"center\" flexDirection=\"column\">\n        <Box maxWidth=\"400px\" mx=\"auto\">\n          <Heading fontSize={4} color={\"white\"}>Gnosis Safe Answers Recovery</Heading>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Box, Heading, Text, Link, Flex, Icon, Flash } from \"rimble-ui\";\n\nclass InstructionsCard extends React.Component {\n  render() {\n    return (\n      <Flex justifyContent={\"center\"}>\n        <Box maxWidth={\"640px\"} mt={4} mx={3}>\n          <Flash variant={'info'}>\n            <Flex>\n              <Box m={1} mr={3} >\n                <Icon name=\"Info\" size={'2rem'} />\n              </Box>\n              <Box mr={3} pt={1}>\n                <Heading fontSize={3} my={0} lineHeight={1.5}>\n                  You're going to need Rinkeby ETH\n                </Heading>\n                <Text color={'inherit'} my={2}>\n                  If you don't have any, you can request some for free. All you need is a Facebook or Twitter account.{\" \"}\n                </Text>\n                <Link\n                  href=\"https://faucet.rinkeby.io/\"\n                  target=\"_blank\"\n                  title=\"Head to the Rinkeby faucet\"\n                >\n                  <Box display={'inline-flex'} alignItems={'center'}>\n                    Get Rinkeby ETH\n                    <Icon name={'OpenInNew'} size={'18px'} mb={'2px'} ml={2} />\n                  </Box>\n                </Link>\n              </Box>\n            </Flex>\n          </Flash>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default InstructionsCard;\n","// Blocknative\nimport Onboard from 'bnc-onboard';\nimport Notify from \"bnc-notify\";\n\nimport Web3 from 'web3';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Box } from \"rimble-ui\";\n\n// Components\nimport Web3Info from './components/Web3Info/index.js';\nimport GnosisSafe from './components/GnosisSafe/index.js';\nimport Header from './components/Header/index.js';\nimport InstructionsCard from './components/InstructionsCard/index.js';\n\nexport default function App() {\n  let web3 = new Web3(Web3.givenProvider);\n  let currentState;\n  // const infuraToken = process.env.REACT_APP_INFURA_ID || '95202223388e49f48b423ea50a70e336';\n  const BNC_APIKey = process.env.REACT_APP_BNC_APIKey;\n  const networkId = 4;\n  const networkIdToUrl = {\n    '1': 'https://etherscan.io/tx',\n    '42': 'https://kovan.etherscan.io/tx',\n    '3': 'https://ropsten.etherscan.io/tx',\n    '4': 'https://rinkeby.etherscan.io/tx',\n    '5': 'https://goerli.etherscan.io/tx',\n  }\n  const [connected, setConnected] = useState(false);\n\n  const notify = Notify({\n    dappId: BNC_APIKey,\n    networkId: networkId\n  });\n\n  const onboard = Onboard({\n    dappId: BNC_APIKey,\n    networkId: networkId,\n    subscriptions: {\n      wallet: wallet => {\n        web3 = new Web3(wallet.provider)\n      }\n    }\n  });\n  // const web3 = new Web3(Web3.givenProvider || new Web3.providers.WebsocketProvider(`wss://rinkeby.infura.io/ws/v3/${infuraToken}`))\n\n  const init = useCallback(async () => {\n    await onboard.walletSelect();\n    let connected = await onboard.walletCheck();\n    setConnected(connected);\n  }, [onboard]);\n\n  useEffect(() => {\n    if(!connected)\n      init();\n  }, [init, onboard, connected]);\n\n  if(connected){\n    currentState = onboard.getState();\n  }\n\n  return (\n    <div>\n      <Header />\n      {connected && (\n        <Box>\n          <Web3Info web3={web3} account={currentState.address} />\n          <GnosisSafe web3={web3} notify={notify} account={currentState.address} networkId={networkId} networkIdToUrl={networkIdToUrl} />\n          <InstructionsCard />\n        </Box>\n      )}\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BaseStyles } from \"rimble-ui\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BaseStyles>\n      <App />\n    </BaseStyles>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const safeAbi = [\n  {\n    type: 'function',\n    name: 'setup',\n    constant: false,\n    payable: false,\n    stateMutability: 'nonpayable',\n    inputs: [\n      { type: 'address[]', name: 'owners' },\n      { type: 'uint256', name: 'threshold' },\n      { type: 'address', name: 'to' },\n      { type: 'bytes', name: 'data' },\n      { type: 'address', name: 'fallbackHandler' },\n      { type: 'address', name: 'paymentToken' },\n      { type: 'uint256', name: 'payment' },\n      { type: 'address', name: 'paymentReceiver' },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'execTransaction',\n    constant: false,\n    payable: false,\n    stateMutability: 'nonpayable',\n    inputs: [\n      { type: 'address', name: 'to' },\n      { type: 'uint256', name: 'value' },\n      { type: 'bytes', name: 'data' },\n      { type: 'uint8', name: 'operation' },\n      { type: 'uint256', name: 'safeTxGas' },\n      { type: 'uint256', name: 'baseGas' },\n      { type: 'uint256', name: 'gasPrice' },\n      { type: 'address', name: 'gasToken' },\n      { type: 'address', name: 'refundReceiver' },\n      { type: 'bytes', name: 'signatures' },\n    ],\n    outputs: [{ type: 'bool', name: 'success' }],\n  },\n  {\n    type: 'function',\n    name: 'swapOwner',\n    constant: false,\n    payable: false,\n    stateMutability: 'nonpayable',\n    inputs: [\n      { type: 'address', name: 'prevOwner' },\n      { type: 'address', name: 'oldOwner' },\n      { type: 'address', name: 'newOwner' },\n    ],\n  },\n];\n\nconst cpkFactoryAbi = [\n  {\n    type: 'function',\n    name: 'proxyCreationCode',\n    constant: true,\n    payable: false,\n    stateMutability: 'pure',\n    inputs: [],\n    outputs: [{ type: 'bytes', name: '' }],\n  },\n  {\n    type: 'function',\n    name: 'createProxyAndExecTransaction',\n    constant: false,\n    payable: false,\n    stateMutability: 'nonpayable',\n    inputs: [\n      { type: 'address', name: 'masterCopy' },\n      { type: 'uint256', name: 'saltNonce' },\n      { type: 'address', name: 'fallbackHandler' },\n      { type: 'address', name: 'to' },\n      { type: 'uint256', name: 'value' },\n      { type: 'bytes', name: 'data' },\n      { type: 'uint8', name: 'operation' },\n    ],\n    outputs: [\n      { type: 'bool', name: 'execTransactionSuccess' },\n    ],\n  },\n];\n\nconst multiSendAbi = [\n  {\n    type: 'function',\n    name: 'multiSend',\n    constant: false,\n    payable: false,\n    stateMutability: 'nonpayable',\n    inputs: [\n      { type: 'bytes', name: 'transactions' },\n    ],\n    outputs: [],\n  },\n];\n\nconst defaultNetworks = {\n  // mainnet\n  1: {\n    masterCopyAddress: '0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F',\n    proxyFactoryAddress: '0x0fB4340432e56c014fa96286de17222822a9281b',\n    multiSendAddress: '0xB522a9f781924eD250A11C54105E51840B138AdD',\n    fallbackHandlerAddress: '0x40A930851BD2e590Bd5A5C981b436de25742E980',\n  },\n  // rinkeby\n  4: {\n    masterCopyAddress: '0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F',\n    proxyFactoryAddress: '0x336c19296d3989e9e0c2561ef21c964068657c38',\n    multiSendAddress: '0xB522a9f781924eD250A11C54105E51840B138AdD',\n    fallbackHandlerAddress: '0x40A930851BD2e590Bd5A5C981b436de25742E980',\n  },\n  // goerli\n  5: {\n    masterCopyAddress: '0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F',\n    proxyFactoryAddress: '0xfC7577774887aAE7bAcdf0Fc8ce041DA0b3200f7',\n    multiSendAddress: '0xB522a9f781924eD250A11C54105E51840B138AdD',\n    fallbackHandlerAddress: '0x40A930851BD2e590Bd5A5C981b436de25742E980',\n  },\n  // kovan\n  42: {\n    masterCopyAddress: '0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F',\n    proxyFactoryAddress: '0xfC7577774887aAE7bAcdf0Fc8ce041DA0b3200f7',\n    multiSendAddress: '0xB522a9f781924eD250A11C54105E51840B138AdD',\n    fallbackHandlerAddress: '0x40A930851BD2e590Bd5A5C981b436de25742E980',\n  },\n};\n\nconst zeroAddress = `0x${'0'.repeat(40)}`;\n\n// keccak256(toUtf8Bytes('Contract Proxy Kit'))\nconst predeterminedSaltNonce = '0xcfe33a586323e7325be6aa6ecd8b4600d232a9037e83c8ece69413b777dabe65';\n\nconst CPK = class CPK {\n  static async create(opts) {\n    if (opts == null) throw new Error('missing options');\n    const cpk = new CPK(opts);\n    await cpk.init();\n    return cpk;\n  }\n\n  static async load(opts, safeAddress) {\n    if (opts == null) throw new Error('missing options');\n    const cpk = new CPK(opts);\n    await cpk.init(safeAddress);\n    return cpk;\n  }\n\n  constructor({\n    web3,\n    ethers,\n    signer,\n    ownerAccount,\n    networks,\n  }) {\n    if (web3 != null) {\n      this.apiType = 'web3';\n      this.web3 = web3;\n    } else if (ethers != null) {\n      this.apiType = 'ethers';\n      this.ethers = ethers;\n      if (signer == null) {\n        throw new Error('missing signer required for ethers');\n      }\n      this.signer = signer;\n    } else throw new Error('web3/ethers property missing from options');\n\n    this.setOwnerAccount(ownerAccount);\n    this.networks = {\n      ...defaultNetworks,\n      ...(networks || {}),\n    };\n  }\n\n  async init(safeAddress = undefined) {\n    const networkID = this.apiType === 'web3'\n      ? await this.web3.eth.net.getId()\n      : (await this.signer.provider.getNetwork()).chainId;\n    const network = this.networks[networkID];\n\n    if (network == null) {\n      throw Error(`unrecognized network ID ${networkID}`);\n    }\n\n    const {\n      masterCopyAddress,\n      proxyFactoryAddress,\n      multiSendAddress,\n      fallbackHandlerAddress,\n    } = network;\n\n    this.masterCopyAddress = masterCopyAddress;\n    this.fallbackHandlerAddress = fallbackHandlerAddress;\n\n    const ownerAccount = await this.getOwnerAccount();\n\n    const provider = this.apiType === 'web3'\n      ? this.web3.currentProvider\n      : this.signer.provider.provider\n      || this.signer.provider._web3Provider; // eslint-disable-line no-underscore-dangle\n    const wc = provider && (provider.wc || (provider.connection && provider.connection.wc));\n    if (\n      wc && wc.peerMeta && wc.peerMeta.name\n      && wc.peerMeta.name.startsWith('Gnosis Safe')\n    ) {\n      this.isConnectedToSafe = true;\n    }\n\n    if (this.apiType === 'web3') {\n      this.multiSend = new this.web3.eth.Contract(multiSendAbi, multiSendAddress);\n\n      if (this.isConnectedToSafe) {\n        this.contract = new this.web3.eth.Contract(safeAbi, ownerAccount);\n      } else {\n        this.proxyFactory = new this.web3.eth.Contract(cpkFactoryAbi, proxyFactoryAddress);\n        const create2Salt = this.web3.utils.keccak256(this.web3.eth.abi.encodeParameters(\n          ['address', 'uint256'],\n          [ownerAccount, predeterminedSaltNonce],\n        ));\n\n        if (safeAddress === undefined){\n          this.contract = new this.web3.eth.Contract(safeAbi, this.web3.utils.toChecksumAddress(\n            this.web3.utils.soliditySha3(\n              '0xff',\n              { t: 'address', v: this.proxyFactory.options.address },\n              { t: 'bytes32', v: create2Salt },\n              this.web3.utils.soliditySha3(\n                await this.proxyFactory.methods.proxyCreationCode().call(),\n                this.web3.eth.abi.encodeParameters(['address'], [this.masterCopyAddress]),\n              ),\n            ).slice(-40),\n          ));\n        }else{\n          this.contract = new this.web3.eth.Contract(safeAbi, safeAddress);\n        }\n\n      }\n    } else if (this.apiType === 'ethers') {\n      const abiToViewAbi = (abi) => abi.map(({\n        constant,\n        stateMutability,\n        ...rest\n      }) => Object.assign(rest, {\n        constant: true,\n        stateMutability: 'view',\n      }));\n\n      this.multiSend = new this.ethers.Contract(multiSendAddress, multiSendAbi, this.signer);\n\n      if (this.isConnectedToSafe) {\n        this.contract = new this.ethers.Contract(ownerAccount, safeAbi, this.signer);\n        this.viewContract = new this.ethers.Contract(\n          ownerAccount,\n          abiToViewAbi(safeAbi),\n          this.signer,\n        );\n      } else {\n        this.proxyFactory = new this.ethers.Contract(\n          proxyFactoryAddress,\n          cpkFactoryAbi,\n          this.signer,\n        );\n        this.viewProxyFactory = new this.ethers.Contract(\n          proxyFactoryAddress,\n          abiToViewAbi(cpkFactoryAbi),\n          this.signer,\n        );\n\n        const create2Salt = this.ethers.utils.keccak256(this.ethers.utils.defaultAbiCoder.encode(\n          ['address', 'uint256'],\n          [ownerAccount, predeterminedSaltNonce],\n        ));\n\n        const address = this.ethers.utils.getAddress(\n          this.ethers.utils.solidityKeccak256(['bytes', 'address', 'bytes32', 'bytes32'], [\n            '0xff',\n            this.proxyFactory.address,\n            create2Salt,\n            this.ethers.utils.solidityKeccak256(['bytes', 'bytes'], [\n              await this.proxyFactory.proxyCreationCode(),\n              this.ethers.utils.defaultAbiCoder.encode(['address'], [this.masterCopyAddress]),\n            ]),\n          ]).slice(-40),\n        );\n\n        this.contract = new this.ethers.Contract(address, safeAbi, this.signer);\n        this.viewContract = new this.ethers.Contract(address, abiToViewAbi(safeAbi), this.signer);\n      }\n    }\n  }\n\n  async getOwnerAccount() {\n    if (this.ownerAccount != null) return this.ownerAccount;\n    if (this.apiType === 'web3') return this.web3.eth.defaultAccount || (await this.web3.eth.getAccounts())[0];\n    if (this.apiType === 'ethers') return this.signer.getAddress();\n    throw new Error(`invalid API type ${this.apiType}`);\n  }\n\n  setOwnerAccount(ownerAccount) {\n    this.ownerAccount = ownerAccount;\n  }\n\n  get address() {\n    if (this.apiType === 'web3') return this.contract.options.address;\n    if (this.apiType === 'ethers') return this.contract.address;\n    throw new Error(`invalid API type ${this.apiType}`);\n  }\n\n  async execTransactions(transactions, options) {\n    const signatureForAddress = (address) => `0x000000000000000000000000${\n      address.replace(/^0x/, '').toLowerCase()\n    }000000000000000000000000000000000000000000000000000000000000000001`;\n\n    const toConnectedSafeTransactions = (txs) => txs.map(({\n      to, value, data,\n    }) => ({\n      to,\n      value,\n      data,\n    }));\n\n    const ownerAccount = await this.getOwnerAccount();\n\n    let checkSingleCall;\n    let attemptTransaction;\n    let attemptSafeProviderSendTx;\n    let attemptSafeProviderMultiSendTxs;\n    let codeAtAddress;\n    let getContractAddress;\n    let encodeMultiSendCalldata;\n\n    if (this.apiType === 'web3') {\n      const sendOptions = {\n        from: ownerAccount,\n        ...(options || {}),\n      };\n      const promiEventToPromise = (promiEvent) => new Promise(\n        (resolve, reject) => promiEvent.once(\n          'transactionHash',\n          (hash) => resolve({ sendOptions, promiEvent, hash }),\n        ).catch(reject),\n      );\n\n      checkSingleCall = (to, value, data) => this.web3.eth.call({\n        from: this.address,\n        to,\n        value,\n        data,\n      });\n\n      attemptTransaction = async (contract, viewContract, methodName, params, err) => {\n        if (!(await contract.methods[methodName](...params).call(sendOptions))) throw err;\n\n        const promiEvent = contract.methods[methodName](...params).send(sendOptions);\n\n        return promiEventToPromise(promiEvent);\n      };\n\n      attemptSafeProviderSendTx = (txObj) => {\n        const promiEvent = this.web3.eth.sendTransaction({\n          ...txObj,\n          ...sendOptions,\n        });\n\n        return promiEventToPromise(promiEvent);\n      };\n\n      attemptSafeProviderMultiSendTxs = async (txs) => {\n        const hash = await (\n          this.web3.currentProvider.host === 'CustomProvider'\n            ? this.web3.currentProvider.send(\n              'gs_multi_send',\n              toConnectedSafeTransactions(txs),\n            ) : new Promise(\n              (resolve, reject) => this.web3.currentProvider.send({\n                jsonrpc: '2.0',\n                id: new Date().getTime(),\n                method: 'gs_multi_send',\n                params: toConnectedSafeTransactions(txs),\n              }, (err, result) => {\n                if (err) return reject(err);\n                if (result.error) return reject(result.error);\n                return resolve(result.result);\n              }),\n            )\n        );\n        return { hash };\n      };\n\n      codeAtAddress = await this.web3.eth.getCode(this.address);\n\n      getContractAddress = (contract) => contract.options.address;\n\n      encodeMultiSendCalldata = (txs) => this.multiSend.methods.multiSend(\n        `0x${txs.map((tx) => [\n          this.web3.eth.abi.encodeParameter('uint8', tx.operation).slice(-2),\n          this.web3.eth.abi.encodeParameter('address', tx.to).slice(-40),\n          this.web3.eth.abi.encodeParameter('uint256', tx.value).slice(-64),\n          this.web3.eth.abi.encodeParameter('uint256', this.web3.utils.hexToBytes(tx.data).length).slice(-64),\n          tx.data.replace(/^0x/, ''),\n        ].join('')).join('')}`,\n      ).encodeABI();\n    } else if (this.apiType === 'ethers') {\n      checkSingleCall = (to, value, data) => this.signer.provider.call({\n        from: this.address,\n        to,\n        value,\n        data,\n      });\n\n      attemptTransaction = async (contract, viewContract, methodName, params, err) => {\n        if (!(await viewContract.functions[methodName](...params))) throw err;\n        const transactionResponse = await contract.functions[methodName](\n          ...params,\n          ...(options == null ? [] : [options]),\n        );\n        return { transactionResponse, hash: transactionResponse.hash };\n      };\n\n      attemptSafeProviderSendTx = async (txObj) => {\n        const transactionResponse = await this.signer.sendTransaction({\n          ...txObj,\n          ...(options || {}),\n        });\n        return { transactionResponse, hash: transactionResponse.hash };\n      };\n\n      attemptSafeProviderMultiSendTxs = async (txs) => {\n        const hash = await this.signer.provider.send('gs_multi_send', toConnectedSafeTransactions(txs));\n        return { hash };\n      };\n\n      codeAtAddress = (await this.signer.provider.getCode(this.address));\n\n      getContractAddress = (contract) => contract.address;\n\n      encodeMultiSendCalldata = (txs) => this.multiSend.interface.functions.multiSend.encode([\n        this.ethers.utils.hexlify(\n          this.ethers.utils.concat(\n            txs.map(\n              (tx) => this.ethers.utils.solidityPack(\n                ['uint8', 'address', 'uint256', 'uint256', 'bytes'],\n                [tx.operation, tx.to, tx.value, this.ethers.utils.hexDataLength(tx.data), tx.data],\n              ),\n            ),\n          ),\n        ),\n      ]);\n    } else {\n      throw new Error(`invalid API type ${this.apiType}`);\n    }\n\n    if (transactions.length === 1) {\n      const transaction = transactions[0];\n      const {\n        operation,\n        to,\n        value,\n        data,\n      } = transaction;\n\n      if (operation === CPK.CALL) {\n        await checkSingleCall(to, value, data);\n\n        if (this.isConnectedToSafe) {\n          return attemptSafeProviderSendTx({ to, value, data });\n        }\n      }\n\n      if (!this.isConnectedToSafe) {\n        if (codeAtAddress !== '0x') {\n          return attemptTransaction(\n            this.contract, this.viewContract,\n            'execTransaction',\n            [\n              to, value, data, operation,\n              0, 0, 0, zeroAddress, zeroAddress,\n              signatureForAddress(ownerAccount),\n            ],\n            new Error('transaction execution expected to fail'),\n          );\n        }\n\n        return attemptTransaction(\n          this.proxyFactory, this.viewProxyFactory,\n          'createProxyAndExecTransaction',\n          [\n            this.masterCopyAddress,\n            predeterminedSaltNonce,\n            this.fallbackHandlerAddress,\n            to, value, data, operation,\n          ],\n          new Error('proxy creation and transaction execution expected to fail'),\n        );\n      }\n    }\n\n    if (this.isConnectedToSafe) {\n      return attemptSafeProviderMultiSendTxs(transactions);\n    }\n\n    if (codeAtAddress !== '0x') {\n      return attemptTransaction(\n        this.contract, this.viewContract,\n        'execTransaction',\n        [\n          getContractAddress(this.multiSend), 0,\n          encodeMultiSendCalldata(transactions),\n          CPK.DELEGATECALL,\n          0, 0, 0, zeroAddress, zeroAddress,\n          signatureForAddress(ownerAccount),\n        ],\n        new Error('transaction execution expected to fail'),\n      );\n    }\n\n    return attemptTransaction(\n      this.proxyFactory, this.viewProxyFactory,\n      'createProxyAndExecTransaction',\n      [\n        this.masterCopyAddress,\n        predeterminedSaltNonce,\n        this.fallbackHandlerAddress,\n        getContractAddress(this.multiSend), 0,\n        encodeMultiSendCalldata(transactions),\n        CPK.DELEGATECALL,\n      ],\n      new Error('proxy creation and transaction execution expected to fail'),\n    );\n  }\n};\n\nCPK.CALL = 0;\nCPK.DELEGATECALL = 1;\n\nmodule.exports = CPK;\n"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/bnc-onboard/dist/esm/fortmatic-9c8c4904.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fortmatic","options","apiKey","networkId","preferred","label","iconSrc","name","svg","wallet","fn","_wallet","mark","_callee","helpers","_yield$import","Fortmatic","instance","provider","BigNumber","wrap","_context","prev","next","sent","undefined","networkName","getProvider","abrupt","connect","user","login","disconnect","logout","address","get","account","network","balance","getBalances","res","crypto_amount","times","toString","stop","self","this","args","arguments","apply","err","_x","type","desktop","mobile"],"mappings":"kLAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GAAO,IAAM,IAAIC,EAAOP,EAAIK,GAAKC,GAAUE,EAAQD,EAAKC,MAAS,MAAOC,GAAwB,YAAfP,EAAOO,GAAsBF,EAAKG,KAAQT,EAAQO,GAAiBG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAuF9OS,UA5Ef,SAAmBC,GACjB,IAAIC,EAASD,EAAQC,OACjBC,EAAYF,EAAQE,UACpBC,EAAYH,EAAQG,UACpBC,EAAQJ,EAAQI,MAChBC,EAAUL,EAAQK,QAEtB,MAAO,CACLC,KAAMF,GAAS,YACfG,IAHQP,EAAQO,KARA,6iBAYhBF,QAASA,EACTG,OAAQ,WACN,IArBqBC,EAqBjBC,GArBiBD,EAqByB,IAAmBE,MAAK,SAASC,EAAQC,GACrF,IAAIC,EAAeC,EAAWC,EAAUC,EAAUC,EAElD,OAAO,IAAmBC,MAAK,SAAkBC,GAC/C,OACE,OAAQA,EAASC,KAAOD,EAASE,MAC/B,KAAK,EAEH,OADAF,EAASE,KAAO,EACT,mCAET,KAAK,EAMH,OALAR,EAAgBM,EAASG,KACzBR,EAAYD,EAAa,QACzBE,EAAW,IAAID,EAAUd,EAAsB,IAAdC,OAAkBsB,EAAYC,YAAYvB,IAC3Ee,EAAWD,EAASU,cACpBR,EAAYL,EAAQK,UACbE,EAASO,OAAO,SAAU,CAC/BV,SAAUA,EACVD,SAAUA,EACV,UAAa,CACXV,KAAM,YACNsB,QAASZ,EAASa,KAAKC,MACvBC,WAAYf,EAASa,KAAKG,OAC1BC,QAAS,CACPC,IAAK,WACH,OAAOrC,QAAQV,QAAQ8B,EAASkB,WAGpCC,QAAS,CACPF,IAAK,WACH,OAAOrC,QAAQV,QAAQe,KAG3BmC,QAAS,CACPH,IAAK,WACH,OAAOjB,EAASkB,SAAWnB,EAASa,KAAKS,cAAcxC,MAAK,SAAUyC,GACpE,OAAOA,EAAI,GAAKrB,EAAUqB,EAAI,GAAGC,eAAeC,MAAMvB,EAAU,wBAAwBwB,SAAS,IAAM,aAOnH,KAAK,EACL,IAAK,MACH,OAAOtB,EAASuB,UAGrB/B,MArE6B,WAAc,IAAIgC,EAAOC,KAAMC,EAAOC,UAAW,OAAO,IAAIlD,SAAQ,SAAUV,EAASC,GAAU,IAAIF,EAAMuB,EAAGuC,MAAMJ,EAAME,GAAO,SAASzD,EAAMK,GAAST,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAAU,SAASJ,EAAO2D,GAAOhE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAS2D,GAAQ5D,OAAMmC,QA4E3W,OAJA,SAAgB0B,GACd,OAAOxC,EAAQsC,MAAMH,KAAME,YArDvB,GA0DRI,KAAM,MACNC,SAAS,EACTC,QAAQ,EACRlD,UAAWA","file":"static/js/25.c08b17ee.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport 'regenerator-runtime/runtime';\nimport { n as networkName } from './onboard-1b7eae0e.js';\nimport 'bignumber.js';\nimport 'bnc-sdk';\nimport 'bowser';\nvar fortmaticIcon = \"\\n  <svg \\n    height=\\\"40\\\" \\n    viewBox=\\\"0 0 40 40\\\" \\n    width=\\\"40\\\" \\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  >\\n    <path d=\\\"m2744.99995 1155h9.99997 10.00008v9.98139h-10.00008-9.99997-9.99998v9.9814.64001 9.28323.05815 9.9234h-9.99997v-9.9234-.05815-9.28323-.64001-9.9814-9.98139h9.99997zm9.99961 29.88552h-9.94167v-9.92324h19.93595v10.27235c0 2.55359-1.01622 5.00299-2.82437 6.80909-1.80867 1.8061-4.26182 2.82181-6.82018 2.82335h-.34973z\\\" \\n      fill=\\\"#617bff\\\" \\n      fill-rule=\\\"evenodd\\\" \\n      transform=\\\"translate(-2725 -1155)\\\"/>\\n  </svg>\\n\";\n\nfunction fortmatic(options) {\n  var apiKey = options.apiKey,\n      networkId = options.networkId,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg;\n  return {\n    name: label || 'Fortmatic',\n    svg: svg || fortmaticIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(helpers) {\n        var _yield$import, Fortmatic, instance, provider, BigNumber;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return import('fortmatic');\n\n              case 2:\n                _yield$import = _context.sent;\n                Fortmatic = _yield$import[\"default\"];\n                instance = new Fortmatic(apiKey, networkId === 1 ? undefined : networkName(networkId));\n                provider = instance.getProvider();\n                BigNumber = helpers.BigNumber;\n                return _context.abrupt(\"return\", {\n                  provider: provider,\n                  instance: instance,\n                  \"interface\": {\n                    name: 'Fortmatic',\n                    connect: instance.user.login,\n                    disconnect: instance.user.logout,\n                    address: {\n                      get: function get() {\n                        return Promise.resolve(provider.account);\n                      }\n                    },\n                    network: {\n                      get: function get() {\n                        return Promise.resolve(networkId);\n                      }\n                    },\n                    balance: {\n                      get: function get() {\n                        return provider.account && instance.user.getBalances().then(function (res) {\n                          return res[0] ? BigNumber(res[0].crypto_amount).times(BigNumber('1000000000000000000')).toString(10) : null;\n                        });\n                      }\n                    }\n                  }\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'sdk',\n    desktop: true,\n    mobile: true,\n    preferred: preferred\n  };\n}\n\nexport default fortmatic;"],"sourceRoot":""}
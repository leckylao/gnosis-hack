{"version":3,"sources":["../node_modules/bnc-onboard/dist/esm/ledger-a73e9937.js","../node_modules/@ledgerhq/errors/dist/index.js","../../src/TransportU2F.js","../node_modules/u2f-api/index.js","../node_modules/u2f-api/lib/u2f-api.js","../node_modules/u2f-api/lib/google-u2f-api.js","../../src/Transport.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../../src/index.js","../../src/Eth.js","../../src/utils.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_iterableToArrayLimit","_unsupportedIterableToArray","TypeError","_nonIterableRest","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","o","minLen","n","prototype","toString","call","slice","constructor","name","test","len","arr2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","ledgerProvider","_x2","_ledgerProvider","mark","_callee13","options","networkId","rpcUrl","LedgerTransport","BigNumber","networkName","dPath","addressToPath","enabled","customPath","account","provider","transport","eth","disconnect","setPath","_setPath","isCustomPath","enable","addresses","setPrimaryAccount","getAddress","_getAddress","getPublicKey","_getPublicKey","getPrimaryAddress","getMoreAccounts","_getMoreAccounts","_getAccounts","_getAccounts2","getBalances","getBalance","_signTransaction","_signTransaction2","_signMessage","_signMessage2","wrap","_context13","prev","_callee12","message","path","_context12","size","values","abrupt","signPersonalMessage","stripHexPrefix","data","result","v","concat","stop","_x9","_callee11","transactionData","transaction","ledgerResult","_context11","Transaction","chain","raw","buffer","Buffer","signTransaction","serialize","sent","r","s","t0","_x8","address","sendAsync","jsonrpc","method","params","id","e","res","all","map","_ref3","_callee5","balance","_context5","_x7","_callee10","getMore","currentAccounts","paths","_i2","_paths","_context10","set","generateAddresses","forEach","_ref4","_x6","_callee9","accounts","_context9","_callee8","publicKey","chainCode","_context8","Error","_callee7","_context7","_x5","entries","accountIndex","findIndex","_ref","unshift","splice","Map","keys","_callee6","custom","_context6","isValidPath","_x3","_x4","close","createProvider","getAccounts","callback","processMessage","messageData","processPersonalMessage","signMessage","send","create","TransportU2F","Eth","t1","ledger","preferred","label","iconSrc","svg","wallet","_wallet","_callee4","helpers","_context4","connect","get","_get","_callee","_context","network","_get2","_callee2","_context2","_get3","_callee3","_context3","_x","type","desktop","mobile","osExclusions","errorClasses","deserializers","addCustomErrorDeserializer","deserializer","createCustomErrorClass","C","fields","assign","stack","EthAppPleaseEnableContractData","TransportRaceCondition","TransportError","StatusCodes","PIN_REMAINING_ATTEMPTS","INCORRECT_LENGTH","MISSING_CRITICAL_PARAMETER","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INCORRECT_DATA","NOT_ENOUGH_MEMORY_SPACE","REFERENCED_DATA_NOT_FOUND","FILE_ALREADY_EXISTS","INCORRECT_P1_P2","INS_NOT_SUPPORTED","CLA_NOT_SUPPORTED","TECHNICAL_PROBLEM","OK","MEMORY_PROBLEM","NO_EF_SELECTED","INVALID_OFFSET","FILE_NOT_FOUND","INCONSISTENT_FILE","ALGORITHM_NOT_SUPPORTED","INVALID_KCV","CODE_NOT_INITIALIZED","ACCESS_CONDITION_NOT_FULFILLED","CONTRADICTION_SECRET_CODE_STATUS","CONTRADICTION_INVALIDATION","CODE_BLOCKED","MAX_VALUE_REACHED","GP_AUTH_FAILED","LICENSING","HALTED","TransportStatusError","statusCode","statusText","find","k","smsg","code","getAltStatusMessage","statusCodeStr","wrapU2FTransportError","originalError","webSafe64","base64","attemptExchange","keyHandle","apdu","wrapApdu","challenge","signRequest","version","appId","location","origin","log","timeoutMillis","response","signatureData","substring","transportInstances","scrambleKey","unwrap","u2fError","t","isSupported","list","supported","listen","observer","unsubscribed","descriptor","unsubscribe","module","exports","require","API","chromeApi","isBrowser","navigator","userAgent","isSafari","match","isEDGE","_backend","getBackend","notSupported","u2f","native","window","sign","protocol","MessageChannel","ok","bind","ensureSupport","register","ErrorCodes","ErrorNames","makeError","msg","errorCode","metaData","deferPromise","promise","ret","cancel","backend","_ensureSupport","registerRequests","signRequests","timeout","makeDefault","func","global","CANCELLED","OTHER_ERROR","BAD_REQUEST","CONFIGURATION_UNSUPPORTED","DEVICE_INELIGIBLE","TIMEOUT","EXTENSION_ID","MessageTypes","Request","Response","SignRequest","SignResponse","RegisterRequest","RegisterResponse","port_","getMessagePort","chrome","runtime","U2F_SIGN_REQUEST","sendMessage","lastError","getIframePort_","getChromeRuntimePort_","port","setTimeout","WrappedChromeRuntimePort_","postMessage","addEventListener","eventName","handler","toLowerCase","onMessage","addListener","console","iframeOrigin","iframe","document","createElement","src","setAttribute","body","appendChild","hasCalledBack","channel","port1","ready","removeEventListener","start","contentWindow","port2","EXTENSION_TIMEOUT_SEC","waitingForPort_","reqCounter_","callbackMap_","getPortSingleton_","responseHandler_","shift","reqId","cb","opt_timeoutSeconds","req","timeoutSeconds","requestId","U2F_REGISTER_REQUEST","a","statusList","cla","ins","p1","sw","busyPromise","resolveBusy","unresponsiveReached","f","clearTimeout","decorateAppAPIMethod","_appAPIlock","openTimeout","found","sub","complete","listenTimeoutId","listenTimeout","Transport","open","ErrorMessage_ListenTimeout","ErrorMessage_NoDeviceFound","_createForOfIteratorHelper","F","it","normalCompletion","didErr","step","_e2","subscribers","obj","String","date","Date","dispatch","hexBuffer","str","maybeHexBuffer","splitPath","boolDisplay","boolChaincode","publicKeyLength","addressLength","offset","rawTx","toSend","maxChunkSize","chunkSize","apduResponse","remapTransactionRelatedErrors","sourceTokenAddressHex","destinationTokenAddressHex","sourceQuantization","destinationQuantization","amountSell","amountBuy","transferTokenAddressHex","targetPublicKeyHex","transferQuantization","amountTransfer","operationContractHex","operationQuantization","components","element","number","parseInt","isNaN","foreach","index","array","iterate"],"mappings":"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","file":"static/js/9.cd64350e.chunk.js","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport 'web3-provider-engine';\nimport 'web3-provider-engine/subproviders/rpc';\nimport 'web3-provider-engine/subproviders/hooked-wallet';\nimport 'web3-provider-engine/subproviders/subscriptions';\nimport 'web3-provider-engine/subproviders/filters';\nimport createProvider from './providerEngine-81ff17e9.js';\nimport 'hdkey';\nimport { stripHexPrefix } from 'ethereumjs-util';\nimport buffer from 'buffer';\nimport { i as isValidPath, g as generateAddresses } from './hd-wallet-c8e87fd8.js';\nimport { Transaction } from 'ethereumjs-tx';\nimport TransportU2F from '@ledgerhq/hw-transport-u2f';\nimport Eth from '@ledgerhq/hw-app-eth';\nvar ledgerIcon = \"\\n\\t<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 450 450\\\" width=\\\"37\\\" height=\\\"37\\\"><style>.st0{fill:currentColor}</style><g id=\\\"squares_1_\\\"><path class=\\\"st0\\\" d=\\\"M578.2 392.7V24.3h25.6v344.1h175.3v24.3H578.2zm327.5 5.1c-39.7 0-70.4-12.8-93.4-37.1-21.7-24.3-33.3-58.8-33.3-103.6 0-43.5 10.2-79.3 32-104.9 21.7-26.9 49.9-39.7 87-39.7 32 0 57.6 11.5 76.8 33.3 19.2 23 28.1 53.7 28.1 92.1v20.5H804.6c0 37.1 9 66.5 26.9 85.7 16.6 20.5 42.2 29.4 74.2 29.4 15.3 0 29.4-1.3 40.9-3.8 11.5-2.6 26.9-6.4 44.8-14.1v24.3c-15.3 6.4-29.4 11.5-42.2 14.1-14.3 2.6-28.9 3.9-43.5 3.8zM898 135.6c-26.9 0-47.3 9-64 25.6-15.3 17.9-25.6 42.2-28.1 75.5h168.9c0-32-6.4-56.3-20.5-74.2-12.8-18-32-26.9-56.3-26.9zm238-21.8c19.2 0 37.1 3.8 51.2 10.2 14.1 7.7 26.9 19.2 38.4 37.1h1.3c-1.3-21.7-1.3-42.2-1.3-62.7V0h24.3v392.7h-16.6l-6.4-42.2c-20.5 30.7-51.2 47.3-89.6 47.3s-66.5-11.5-87-35.8c-20.5-23-29.4-57.6-29.4-102.3 0-47.3 10.2-83.2 29.4-108.7 19.2-25.6 48.6-37.2 85.7-37.2zm0 21.8c-29.4 0-52.4 10.2-67.8 32-15.3 20.5-23 51.2-23 92.1 0 78 30.7 116.4 90.8 116.4 30.7 0 53.7-9 67.8-26.9 14.1-17.9 21.7-47.3 21.7-89.6v-3.8c0-42.2-7.7-72.9-21.7-90.8-12.8-20.5-35.8-29.4-67.8-29.4zm379.9-16.6v17.9l-56.3 3.8c15.3 19.2 23 39.7 23 61.4 0 26.9-9 47.3-26.9 64-17.9 16.6-40.9 24.3-70.4 24.3-12.8 0-21.7 0-25.6-1.3-10.2 5.1-17.9 11.5-23 17.9-5.1 7.7-7.7 14.1-7.7 23s3.8 15.3 10.2 19.2c6.4 3.8 17.9 6.4 33.3 6.4h47.3c29.4 0 52.4 6.4 67.8 17.9s24.3 29.4 24.3 53.7c0 29.4-11.5 51.2-34.5 66.5-23 15.3-56.3 23-99.8 23-34.5 0-61.4-6.4-80.6-20.5-19.2-12.8-28.1-32-28.1-55 0-19.2 6.4-34.5 17.9-47.3s28.1-20.5 47.3-25.6c-7.7-3.8-15.3-9-19.2-15.3-5-6.2-7.7-13.8-7.7-21.7 0-17.9 11.5-34.5 34.5-48.6-15.3-6.4-28.1-16.6-37.1-30.7-9-14.1-12.8-30.7-12.8-48.6 0-26.9 9-49.9 25.6-66.5 17.9-16.6 40.9-24.3 70.4-24.3 17.9 0 32 1.3 42.2 5.1h85.7v1.3h.2zm-222.6 319.8c0 37.1 28.1 56.3 84.4 56.3 71.6 0 107.5-23 107.5-69.1 0-16.6-5.1-28.1-16.6-35.8-11.5-7.7-29.4-11.5-55-11.5h-44.8c-49.9 1.2-75.5 20.4-75.5 60.1zm21.8-235.4c0 21.7 6.4 37.1 19.2 49.9 12.8 11.5 29.4 17.9 51.2 17.9 23 0 40.9-6.4 52.4-17.9 12.8-11.5 17.9-28.1 17.9-49.9 0-23-6.4-40.9-19.2-52.4-12.8-11.5-29.4-17.9-52.4-17.9-21.7 0-39.7 6.4-51.2 19.2-12.8 11.4-17.9 29.3-17.9 51.1z\\\"/><path class=\\\"st0\\\" d=\\\"M1640 397.8c-39.7 0-70.4-12.8-93.4-37.1-21.7-24.3-33.3-58.8-33.3-103.6 0-43.5 10.2-79.3 32-104.9 21.7-26.9 49.9-39.7 87-39.7 32 0 57.6 11.5 76.8 33.3 19.2 23 28.1 53.7 28.1 92.1v20.5h-197c0 37.1 9 66.5 26.9 85.7 16.6 20.5 42.2 29.4 74.2 29.4 15.3 0 29.4-1.3 40.9-3.8 11.5-2.6 26.9-6.4 44.8-14.1v24.3c-15.3 6.4-29.4 11.5-42.2 14.1-14.1 2.6-28.2 3.8-44.8 3.8zm-6.4-262.2c-26.9 0-47.3 9-64 25.6-15.3 17.9-25.6 42.2-28.1 75.5h168.9c0-32-6.4-56.3-20.5-74.2-12.8-18-32-26.9-56.3-26.9zm245.6-21.8c11.5 0 24.3 1.3 37.1 3.8l-5.1 24.3c-11.8-2.6-23.8-3.9-35.8-3.8-23 0-42.2 10.2-57.6 29.4-15.3 20.5-23 44.8-23 75.5v149.7h-25.6V119h21.7l2.6 49.9h1.3c11.5-20.5 23-34.5 35.8-42.2 15.4-9 30.7-12.9 48.6-12.9zM333.9 12.8h-183v245.6h245.6V76.7c.1-34.5-28.1-63.9-62.6-63.9zm-239.2 0H64c-34.5 0-64 28.1-64 64v30.7h94.7V12.8zM0 165h94.7v94.7H0V165zm301.9 245.6h30.7c34.5 0 64-28.1 64-64V316h-94.7v94.6zm-151-94.6h94.7v94.7h-94.7V316zM0 316v30.7c0 34.5 28.1 64 64 64h30.7V316H0z\\\"/></g></svg>\\n\";\nvar LEDGER_LIVE_PATH = \"m/44'/60'\";\nvar ACCOUNTS_TO_GET = 5;\n\nfunction ledger(options) {\n  var rpcUrl = options.rpcUrl,\n      LedgerTransport = options.LedgerTransport,\n      networkId = options.networkId,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg;\n  return {\n    name: label || 'Ledger',\n    svg: svg || ledgerIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(helpers) {\n        var BigNumber, networkName, provider;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                BigNumber = helpers.BigNumber, networkName = helpers.networkName;\n                _context4.next = 3;\n                return ledgerProvider({\n                  rpcUrl: rpcUrl,\n                  networkId: networkId,\n                  LedgerTransport: LedgerTransport,\n                  BigNumber: BigNumber,\n                  networkName: networkName\n                });\n\n              case 3:\n                provider = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  provider: provider,\n                  \"interface\": {\n                    name: 'Ledger',\n                    connect: provider.enable,\n                    disconnect: provider.disconnect,\n                    address: {\n                      get: function () {\n                        var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                          return regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  return _context.abrupt(\"return\", provider.getPrimaryAddress());\n\n                                case 1:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        function get() {\n                          return _get.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    network: {\n                      get: function () {\n                        var _get2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  return _context2.abrupt(\"return\", networkId);\n\n                                case 1:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2);\n                        }));\n\n                        function get() {\n                          return _get2.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    balance: {\n                      get: function () {\n                        var _get3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                          var address;\n                          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                              switch (_context3.prev = _context3.next) {\n                                case 0:\n                                  address = provider.getPrimaryAddress();\n                                  return _context3.abrupt(\"return\", address && provider.getBalance(address));\n\n                                case 2:\n                                case \"end\":\n                                  return _context3.stop();\n                              }\n                            }\n                          }, _callee3);\n                        }));\n\n                        function get() {\n                          return _get3.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    }\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'hardware',\n    desktop: true,\n    mobile: true,\n    osExclusions: ['iOS'],\n    preferred: preferred\n  };\n}\n\nfunction ledgerProvider(_x2) {\n  return _ledgerProvider.apply(this, arguments);\n}\n\nfunction _ledgerProvider() {\n  _ledgerProvider = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(options) {\n    var networkId, rpcUrl, LedgerTransport, BigNumber, networkName, dPath, addressToPath, enabled, customPath, account, provider, transport, eth, disconnect, setPath, _setPath, isCustomPath, enable, addresses, setPrimaryAccount, getAddress, _getAddress, getPublicKey, _getPublicKey, getPrimaryAddress, getMoreAccounts, _getMoreAccounts, _getAccounts, _getAccounts2, getBalances, getBalance, _signTransaction, _signTransaction2, _signMessage, _signMessage2;\n\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _signMessage2 = function _signMessage4() {\n              _signMessage2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(message) {\n                var path;\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context12.next = 3;\n                          break;\n                        }\n\n                        _context12.next = 3;\n                        return enable();\n\n                      case 3:\n                        path = _toConsumableArray(addressToPath.values())[0];\n                        return _context12.abrupt(\"return\", eth.signPersonalMessage(path, stripHexPrefix(message.data)).then(function (result) {\n                          var v = (result['v'] - 27).toString(16);\n\n                          if (v.length < 2) {\n                            v = '0' + v;\n                          }\n\n                          return \"0x\".concat(result['r']).concat(result['s']).concat(v);\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              }));\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signMessage = function _signMessage3(_x9) {\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signTransaction2 = function _signTransaction4() {\n              _signTransaction2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(transactionData) {\n                var path, transaction, ledgerResult;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        path = _toConsumableArray(addressToPath.values())[0];\n                        _context11.prev = 1;\n                        transaction = new Transaction(transactionData, {\n                          chain: networkName(networkId)\n                        });\n                        transaction.raw[6] = buffer.Buffer.from([networkId]); // v\n\n                        transaction.raw[7] = buffer.Buffer.from([]); // r\n\n                        transaction.raw[8] = buffer.Buffer.from([]); // s\n\n                        _context11.next = 8;\n                        return eth.signTransaction(path, transaction.serialize().toString('hex'));\n\n                      case 8:\n                        ledgerResult = _context11.sent;\n                        transaction.v = buffer.Buffer.from(ledgerResult.v, 'hex');\n                        transaction.r = buffer.Buffer.from(ledgerResult.r, 'hex');\n                        transaction.s = buffer.Buffer.from(ledgerResult.s, 'hex');\n                        return _context11.abrupt(\"return\", \"0x\".concat(transaction.serialize().toString('hex')));\n\n                      case 15:\n                        _context11.prev = 15;\n                        _context11.t0 = _context11[\"catch\"](1);\n                        throw _context11.t0;\n\n                      case 18:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11, null, [[1, 15]]);\n              }));\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            _signTransaction = function _signTransaction3(_x8) {\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            getBalance = function _getBalance(address) {\n              return new Promise(function (resolve, reject) {\n                provider.sendAsync({\n                  jsonrpc: '2.0',\n                  method: 'eth_getBalance',\n                  params: [address, 'latest'],\n                  id: 42\n                }, function (e, res) {\n                  e && reject(e);\n                  var result = res && res.result;\n\n                  if (result != null) {\n                    resolve(new BigNumber(result).toString(10));\n                  } else {\n                    resolve(null);\n                  }\n                });\n              });\n            };\n\n            getBalances = function _getBalances(addresses) {\n              return Promise.all(addresses.map(function (address) {\n                return new Promise( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(resolve) {\n                    var balance;\n                    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return getBalance(address);\n\n                          case 2:\n                            balance = _context5.sent;\n                            resolve({\n                              address: address,\n                              balance: balance\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x7) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }));\n            };\n\n            _getAccounts2 = function _getAccounts4() {\n              _getAccounts2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(getMore) {\n                var currentAccounts, paths, i, _i2, _paths, path, res, addressInfo;\n\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        if (enabled) {\n                          _context10.next = 2;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", []);\n\n                      case 2:\n                        if (!(addressToPath.size > 0 && !getMore)) {\n                          _context10.next = 4;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 4:\n                        if (dPath === '') {\n                          dPath = LEDGER_LIVE_PATH;\n                        }\n\n                        if (!(dPath === LEDGER_LIVE_PATH)) {\n                          _context10.next = 21;\n                          break;\n                        }\n\n                        currentAccounts = addressToPath.size;\n                        paths = [];\n\n                        for (i = currentAccounts; i < ACCOUNTS_TO_GET + currentAccounts; i++) {\n                          paths.push(\"\".concat(LEDGER_LIVE_PATH, \"/\").concat(i, \"'/0/0\"));\n                        }\n\n                        _i2 = 0, _paths = paths;\n\n                      case 10:\n                        if (!(_i2 < _paths.length)) {\n                          _context10.next = 19;\n                          break;\n                        }\n\n                        path = _paths[_i2];\n                        _context10.next = 14;\n                        return eth.getAddress(path);\n\n                      case 14:\n                        res = _context10.sent;\n                        addressToPath.set(res.address, path);\n\n                      case 16:\n                        _i2++;\n                        _context10.next = 10;\n                        break;\n\n                      case 19:\n                        _context10.next = 33;\n                        break;\n\n                      case 21:\n                        if (account) {\n                          _context10.next = 31;\n                          break;\n                        }\n\n                        _context10.prev = 22;\n                        _context10.next = 25;\n                        return getPublicKey();\n\n                      case 25:\n                        account = _context10.sent;\n                        _context10.next = 31;\n                        break;\n\n                      case 28:\n                        _context10.prev = 28;\n                        _context10.t0 = _context10[\"catch\"](22);\n                        throw _context10.t0;\n\n                      case 31:\n                        addressInfo = generateAddresses(account, addressToPath.size);\n                        addressInfo.forEach(function (_ref4) {\n                          var dPath = _ref4.dPath,\n                              address = _ref4.address;\n                          addressToPath.set(address, dPath);\n                        });\n\n                      case 33:\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 34:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[22, 28]]);\n              }));\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getAccounts = function _getAccounts3(_x6) {\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getMoreAccounts = function _getMoreAccounts3() {\n              _getMoreAccounts = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                var accounts;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.next = 2;\n                        return _getAccounts(true);\n\n                      case 2:\n                        accounts = _context9.sent;\n                        return _context9.abrupt(\"return\", accounts && getBalances(accounts));\n\n                      case 4:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getMoreAccounts = function _getMoreAccounts2() {\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getPrimaryAddress = function _getPrimaryAddress() {\n              return enabled ? addresses()[0] : undefined;\n            };\n\n            _getPublicKey = function _getPublicKey3() {\n              _getPublicKey = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                var result, publicKey, chainCode;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        if (dPath) {\n                          _context8.next = 2;\n                          break;\n                        }\n\n                        throw new Error('a derivation path is needed to get the public key');\n\n                      case 2:\n                        _context8.prev = 2;\n                        _context8.next = 5;\n                        return eth.getAddress(dPath, false, true);\n\n                      case 5:\n                        result = _context8.sent;\n                        publicKey = result.publicKey, chainCode = result.chainCode;\n                        account = {\n                          publicKey: publicKey,\n                          chainCode: chainCode,\n                          path: dPath\n                        };\n                        return _context8.abrupt(\"return\", account);\n\n                      case 11:\n                        _context8.prev = 11;\n                        _context8.t0 = _context8[\"catch\"](2);\n                        throw new Error('There was a problem accessing your Ledger accounts.');\n\n                      case 14:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[2, 11]]);\n              }));\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            getPublicKey = function _getPublicKey2() {\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            _getAddress = function _getAddress3() {\n              _getAddress = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(path) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.prev = 0;\n                        _context7.next = 3;\n                        return eth.getAddress(path);\n\n                      case 3:\n                        result = _context7.sent;\n                        return _context7.abrupt(\"return\", result.address);\n\n                      case 7:\n                        _context7.prev = 7;\n                        _context7.t0 = _context7[\"catch\"](0);\n\n                      case 9:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[0, 7]]);\n              }));\n              return _getAddress.apply(this, arguments);\n            };\n\n            getAddress = function _getAddress2(_x5) {\n              return _getAddress.apply(this, arguments);\n            };\n\n            setPrimaryAccount = function _setPrimaryAccount(address) {\n              // make a copy and put in an array\n              var accounts = _toConsumableArray(addressToPath.entries());\n\n              var accountIndex = accounts.findIndex(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 1),\n                    accountAddress = _ref2[0];\n\n                return accountAddress === address;\n              }); // pull the item at the account index out of the array and place at the front\n\n              accounts.unshift(accounts.splice(accountIndex, 1)[0]); // reassign addressToPath to new ordered accounts\n\n              addressToPath = new Map(accounts);\n            };\n\n            addresses = function _addresses() {\n              return Array.from(addressToPath.keys());\n            };\n\n            enable = function _enable() {\n              enabled = true;\n              return _getAccounts();\n            };\n\n            isCustomPath = function _isCustomPath() {\n              return customPath;\n            };\n\n            _setPath = function _setPath3() {\n              _setPath = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(path, custom) {\n                var address;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (isValidPath(path)) {\n                          _context6.next = 2;\n                          break;\n                        }\n\n                        return _context6.abrupt(\"return\", false);\n\n                      case 2:\n                        if (path !== dPath) {\n                          // clear any exsting addresses if different path\n                          addressToPath = new Map();\n                        }\n\n                        if (!custom) {\n                          _context6.next = 10;\n                          break;\n                        }\n\n                        _context6.next = 6;\n                        return getAddress(path);\n\n                      case 6:\n                        address = _context6.sent;\n                        addressToPath.set(address, path);\n                        customPath = true;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 10:\n                        customPath = false;\n                        dPath = path;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 13:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n              return _setPath.apply(this, arguments);\n            };\n\n            setPath = function _setPath2(_x3, _x4) {\n              return _setPath.apply(this, arguments);\n            };\n\n            disconnect = function _disconnect() {\n              transport.close();\n              dPath = '';\n              addressToPath = new Map();\n              enabled = false;\n              provider.stop();\n            };\n\n            networkId = options.networkId, rpcUrl = options.rpcUrl, LedgerTransport = options.LedgerTransport, BigNumber = options.BigNumber, networkName = options.networkName;\n            dPath = '';\n            addressToPath = new Map();\n            enabled = false;\n            customPath = false;\n            provider = createProvider({\n              getAccounts: function getAccounts(callback) {\n                _getAccounts().then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signTransaction: function signTransaction(transactionData, callback) {\n                _signTransaction(transactionData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processMessage: function processMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processPersonalMessage: function processPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signMessage: function signMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signPersonalMessage: function signPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              rpcUrl: rpcUrl\n            });\n            provider.setPath = setPath;\n            provider.dPath = dPath;\n            provider.enable = enable;\n            provider.setPrimaryAccount = setPrimaryAccount;\n            provider.getPrimaryAddress = getPrimaryAddress;\n            provider.getAccounts = _getAccounts;\n            provider.getMoreAccounts = getMoreAccounts;\n            provider.getBalance = getBalance;\n            provider.getBalances = getBalances;\n            provider.send = provider.sendAsync;\n            provider.disconnect = disconnect;\n            provider.isCustomPath = isCustomPath;\n            _context13.prev = 40;\n\n            if (!LedgerTransport) {\n              _context13.next = 47;\n              break;\n            }\n\n            _context13.next = 44;\n            return LedgerTransport.create();\n\n          case 44:\n            _context13.t0 = _context13.sent;\n            _context13.next = 50;\n            break;\n\n          case 47:\n            _context13.next = 49;\n            return TransportU2F.create();\n\n          case 49:\n            _context13.t0 = _context13.sent;\n\n          case 50:\n            transport = _context13.t0;\n            eth = new Eth(transport);\n            _context13.next = 57;\n            break;\n\n          case 54:\n            _context13.prev = 54;\n            _context13.t1 = _context13[\"catch\"](40);\n            throw new Error('Error connecting to Ledger wallet');\n\n          case 57:\n            return _context13.abrupt(\"return\", provider);\n\n          case 58:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, null, [[40, 54]]);\n  }));\n  return _ledgerProvider.apply(this, arguments);\n}\n\nexport default ledger;","/* eslint-disable no-continue */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-prototype-builtins */\r\nvar errorClasses = {};\r\nvar deserializers = {};\r\nvar addCustomErrorDeserializer = function (name, deserializer) {\r\n    deserializers[name] = deserializer;\r\n};\r\nvar createCustomErrorClass = function (name) {\r\n    var C = function CustomError(message, fields) {\r\n        Object.assign(this, fields);\r\n        this.name = name;\r\n        this.message = message || name;\r\n        this.stack = new Error().stack;\r\n    };\r\n    C.prototype = new Error();\r\n    errorClasses[name] = C;\r\n    return C;\r\n};\r\n// inspired from https://github.com/programble/errio/blob/master/index.js\r\nvar deserializeError = function (object) {\r\n    if (typeof object === \"object\" && object) {\r\n        try {\r\n            // $FlowFixMe FIXME HACK\r\n            var msg = JSON.parse(object.message);\r\n            if (msg.message && msg.name) {\r\n                object = msg;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // nothing\r\n        }\r\n        var error = void 0;\r\n        if (typeof object.name === \"string\") {\r\n            var name_1 = object.name;\r\n            var des = deserializers[name_1];\r\n            if (des) {\r\n                error = des(object);\r\n            }\r\n            else {\r\n                var constructor = name_1 === \"Error\" ? Error : errorClasses[name_1];\r\n                if (!constructor) {\r\n                    console.warn(\"deserializing an unknown class '\" + name_1 + \"'\");\r\n                    constructor = createCustomErrorClass(name_1);\r\n                }\r\n                error = Object.create(constructor.prototype);\r\n                try {\r\n                    for (var prop in object) {\r\n                        if (object.hasOwnProperty(prop)) {\r\n                            error[prop] = object[prop];\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // sometimes setting a property can fail (e.g. .name)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            error = new Error(object.message);\r\n        }\r\n        if (!error.stack && Error.captureStackTrace) {\r\n            Error.captureStackTrace(error, deserializeError);\r\n        }\r\n        return error;\r\n    }\r\n    return new Error(String(object));\r\n};\r\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\r\nvar serializeError = function (value) {\r\n    if (!value)\r\n        return value;\r\n    if (typeof value === \"object\") {\r\n        return destroyCircular(value, []);\r\n    }\r\n    if (typeof value === \"function\") {\r\n        return \"[Function: \" + (value.name || \"anonymous\") + \"]\";\r\n    }\r\n    return value;\r\n};\r\n// https://www.npmjs.com/package/destroy-circular\r\nfunction destroyCircular(from, seen) {\r\n    var to = {};\r\n    seen.push(from);\r\n    for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var value = from[key];\r\n        if (typeof value === \"function\") {\r\n            continue;\r\n        }\r\n        if (!value || typeof value !== \"object\") {\r\n            to[key] = value;\r\n            continue;\r\n        }\r\n        if (seen.indexOf(from[key]) === -1) {\r\n            to[key] = destroyCircular(from[key], seen.slice(0));\r\n            continue;\r\n        }\r\n        to[key] = \"[Circular]\";\r\n    }\r\n    if (typeof from.name === \"string\") {\r\n        to.name = from.name;\r\n    }\r\n    if (typeof from.message === \"string\") {\r\n        to.message = from.message;\r\n    }\r\n    if (typeof from.stack === \"string\") {\r\n        to.stack = from.stack;\r\n    }\r\n    return to;\r\n}\n\nvar AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\r\nvar AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\r\nvar AmountRequired = createCustomErrorClass(\"AmountRequired\");\r\nvar BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\r\nvar BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\r\nvar CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\r\nvar CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\r\nvar CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\r\nvar DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\r\nvar DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\r\nvar DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\r\nvar DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\r\nvar DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\r\nvar DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\r\nvar DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\r\nvar DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\r\nvar DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\r\nvar DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\r\nvar DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\r\nvar DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\r\nvar EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\r\nvar EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\r\nvar FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\r\nvar FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\r\nvar HardResetFail = createCustomErrorClass(\"HardResetFail\");\r\nvar InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\r\nvar InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\r\nvar InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\r\nvar LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\r\nvar UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\r\nvar LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\r\nvar LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\r\nvar LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\r\nvar ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\r\nvar ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\r\nvar ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\r\nvar ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\r\nvar ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\r\nvar ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\r\nvar ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\r\nvar ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\r\nvar NetworkDown = createCustomErrorClass(\"NetworkDown\");\r\nvar NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\r\nvar NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\r\nvar NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\r\nvar NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\r\nvar NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\r\nvar NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\r\nvar NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\r\nvar NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\r\nvar NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\r\nvar GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\r\nvar PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\r\nvar PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\r\nvar RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\r\nvar RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\r\nvar TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\r\nvar UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\r\nvar MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\r\nvar RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\r\nvar UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\r\nvar UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\r\nvar UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\r\nvar UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\r\nvar UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\r\nvar UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\r\nvar UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\r\nvar UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\r\nvar UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\r\nvar UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\r\nvar UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\r\nvar TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\r\nvar TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\r\nvar TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\r\nvar TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\r\nvar DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\r\nvar WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\r\nvar WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\r\nvar WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\r\nvar WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\r\nvar ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\r\nvar CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\r\nvar FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\r\nvar FeeRequired = createCustomErrorClass(\"FeeRequired\");\r\nvar FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\r\nvar SyncError = createCustomErrorClass(\"SyncError\");\r\nvar PairingFailed = createCustomErrorClass(\"PairingFailed\");\r\nvar GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\r\nvar LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\r\nvar LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\r\nvar FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\r\n// db stuff, no need to translate\r\nvar NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\r\nvar DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\r\nvar DBNotReset = createCustomErrorClass(\"DBNotReset\");\r\n/**\r\n * TransportError is used for any generic transport errors.\r\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\r\n */\r\nfunction TransportError(message, id) {\r\n    this.name = \"TransportError\";\r\n    this.message = message;\r\n    this.stack = new Error().stack;\r\n    this.id = id;\r\n}\r\nTransportError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportError\", function (e) { return new TransportError(e.message, e.id); });\r\nvar StatusCodes = {\r\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\r\n    INCORRECT_LENGTH: 0x6700,\r\n    MISSING_CRITICAL_PARAMETER: 0x6800,\r\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\r\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\r\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\r\n    INCORRECT_DATA: 0x6a80,\r\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\r\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\r\n    FILE_ALREADY_EXISTS: 0x6a89,\r\n    INCORRECT_P1_P2: 0x6b00,\r\n    INS_NOT_SUPPORTED: 0x6d00,\r\n    CLA_NOT_SUPPORTED: 0x6e00,\r\n    TECHNICAL_PROBLEM: 0x6f00,\r\n    OK: 0x9000,\r\n    MEMORY_PROBLEM: 0x9240,\r\n    NO_EF_SELECTED: 0x9400,\r\n    INVALID_OFFSET: 0x9402,\r\n    FILE_NOT_FOUND: 0x9404,\r\n    INCONSISTENT_FILE: 0x9408,\r\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\r\n    INVALID_KCV: 0x9485,\r\n    CODE_NOT_INITIALIZED: 0x9802,\r\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\r\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\r\n    CONTRADICTION_INVALIDATION: 0x9810,\r\n    CODE_BLOCKED: 0x9840,\r\n    MAX_VALUE_REACHED: 0x9850,\r\n    GP_AUTH_FAILED: 0x6300,\r\n    LICENSING: 0x6f42,\r\n    HALTED: 0x6faa\r\n};\r\nfunction getAltStatusMessage(code) {\r\n    switch (code) {\r\n        // improve text of most common errors\r\n        case 0x6700:\r\n            return \"Incorrect length\";\r\n        case 0x6800:\r\n            return \"Missing critical parameter\";\r\n        case 0x6982:\r\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\r\n        case 0x6985:\r\n            return \"Condition of use not satisfied (denied by the user?)\";\r\n        case 0x6a80:\r\n            return \"Invalid data received\";\r\n        case 0x6b00:\r\n            return \"Invalid parameter received\";\r\n    }\r\n    if (0x6f00 <= code && code <= 0x6fff) {\r\n        return \"Internal error, please report\";\r\n    }\r\n}\r\n/**\r\n * Error thrown when a device returned a non success status.\r\n * the error.statusCode is one of the `StatusCodes` exported by this library.\r\n */\r\nfunction TransportStatusError(statusCode) {\r\n    this.name = \"TransportStatusError\";\r\n    var statusText = Object.keys(StatusCodes).find(function (k) { return StatusCodes[k] === statusCode; }) ||\r\n        \"UNKNOWN_ERROR\";\r\n    var smsg = getAltStatusMessage(statusCode) || statusText;\r\n    var statusCodeStr = statusCode.toString(16);\r\n    this.message = \"Ledger device: \" + smsg + \" (0x\" + statusCodeStr + \")\";\r\n    this.stack = new Error().stack;\r\n    this.statusCode = statusCode;\r\n    this.statusText = statusText;\r\n}\r\nTransportStatusError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportStatusError\", function (e) { return new TransportStatusError(e.statusCode); });\n\nexport { AccountNameRequiredError, AccountNotSupported, AmountRequired, BluetoothRequired, BtcUnmatchedApp, CantOpenDevice, CantScanQRCode, CashAddrNotSupported, CurrencyNotSupported, DBNotReset, DBWrongPassword, DeviceAppVerifyNotSupported, DeviceGenuineSocketEarlyClose, DeviceHalted, DeviceInOSUExpected, DeviceNameInvalid, DeviceNotGenuineError, DeviceOnDashboardExpected, DeviceOnDashboardUnexpected, DeviceShouldStayInApp, DeviceSocketFail, DeviceSocketNoBulkStatus, DisconnectedDevice, DisconnectedDeviceDuringOperation, ETHAddressNonEIP, EnpointConfigError, EthAppPleaseEnableContractData, FeeEstimationFailed, FeeNotLoaded, FeeRequired, FeeTooHigh, FirmwareNotRecognized, FirmwareOrAppUpdateRequired, GasLessThanEstimate, GenuineCheckFailed, HardResetFail, InvalidAddress, InvalidAddressBecauseDestinationIsAlsoSource, InvalidXRPTag, LatestMCUInstalledError, LedgerAPI4xx, LedgerAPI5xx, LedgerAPIError, LedgerAPIErrorWithMessage, LedgerAPINotAvailable, MCUNotGenuineToDashboard, ManagerAppAlreadyInstalledError, ManagerAppDepInstallRequired, ManagerAppDepUninstallRequired, ManagerAppRelyOnBTCError, ManagerDeviceLockedError, ManagerFirmwareNotEnoughSpaceError, ManagerNotEnoughSpaceError, ManagerUninstallBTCDep, NetworkDown, NoAccessToCamera, NoAddressesFound, NoDBPathGiven, NotEnoughBalance, NotEnoughBalanceBecauseDestinationNotCreated, NotEnoughBalanceInParentAccount, NotEnoughBalanceToDelegate, NotEnoughGas, NotEnoughSpendableBalance, NotSupportedLegacyAddress, PairingFailed, PasswordIncorrectError, PasswordsDontMatchError, RecipientRequired, RecommendSubAccountsToEmpty, RecommendUndelegation, StatusCodes, SyncError, TimeoutTagged, TransportError, TransportInterfaceNotAvailable, TransportOpenUserCancelled, TransportRaceCondition, TransportStatusError, TransportWebUSBGestureRequired, UnavailableTezosOriginatedAccountReceive, UnavailableTezosOriginatedAccountSend, UnexpectedBootloader, UnknownMCU, UpdateFetchFileFail, UpdateIncorrectHash, UpdateIncorrectSig, UpdateYourApp, UserRefusedAddress, UserRefusedAllowManager, UserRefusedDeviceNameChange, UserRefusedFirmwareUpdate, UserRefusedOnDevice, WebsocketConnectionError, WebsocketConnectionFailed, WrongAppForCurrency, WrongDeviceForAccount, addCustomErrorDeserializer, createCustomErrorClass, deserializeError, getAltStatusMessage, serializeError };\n","//@flow\n\nimport { sign, isSupported } from \"u2f-api\";\nimport Transport from \"@ledgerhq/hw-transport\";\nimport { log } from \"@ledgerhq/logs\";\nimport { TransportError } from \"@ledgerhq/errors\";\n\nfunction wrapU2FTransportError(originalError, message, id) {\n  const err = new TransportError(message, id);\n  // $FlowFixMe\n  err.originalError = originalError;\n  return err;\n}\n\nfunction wrapApdu(apdu: Buffer, key: Buffer) {\n  const result = Buffer.alloc(apdu.length);\n  for (let i = 0; i < apdu.length; i++) {\n    result[i] = apdu[i] ^ key[i % key.length];\n  }\n  return result;\n}\n\n// Convert from normal to web-safe, strip trailing \"=\"s\nconst webSafe64 = (base64: string) =>\n  base64\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\")\n    .replace(/=+$/, \"\");\n\n// Convert from web-safe to normal, add trailing \"=\"s\nconst normal64 = (base64: string) =>\n  base64.replace(/-/g, \"+\").replace(/_/g, \"/\") +\n  \"==\".substring(0, (3 * base64.length) % 4);\n\nfunction attemptExchange(\n  apdu: Buffer,\n  timeoutMillis: number,\n  scrambleKey: Buffer,\n  unwrap: boolean\n): Promise<Buffer> {\n  const keyHandle = wrapApdu(apdu, scrambleKey);\n  const challenge = Buffer.from(\n    \"0000000000000000000000000000000000000000000000000000000000000000\",\n    \"hex\"\n  );\n  const signRequest = {\n    version: \"U2F_V2\",\n    keyHandle: webSafe64(keyHandle.toString(\"base64\")),\n    challenge: webSafe64(challenge.toString(\"base64\")),\n    appId: location.origin\n  };\n  log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n  return sign(signRequest, timeoutMillis / 1000).then(response => {\n    const { signatureData } = response;\n    if (typeof signatureData === \"string\") {\n      const data = Buffer.from(normal64(signatureData), \"base64\");\n      let result;\n      if (!unwrap) {\n        result = data;\n      } else {\n        result = data.slice(5);\n      }\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    } else {\n      throw response;\n    }\n  });\n}\n\nlet transportInstances = [];\n\nfunction emitDisconnect() {\n  transportInstances.forEach(t => t.emit(\"disconnect\"));\n  transportInstances = [];\n}\n\nfunction isTimeoutU2FError(u2fError) {\n  return u2fError.metaData.code === 5;\n}\n\n/**\n * U2F web Transport implementation\n * @example\n * import TransportU2F from \"@ledgerhq/hw-transport-u2f\";\n * ...\n * TransportU2F.create().then(transport => ...)\n */\nexport default class TransportU2F extends Transport<null> {\n  static isSupported = isSupported;\n\n  /*\n   */\n  static list = (): * =>\n    // this transport is not discoverable but we are going to guess if it is here with isSupported()\n    isSupported().then(supported => (supported ? [null] : []));\n\n  /*\n   */\n  static listen = (observer: *) => {\n    let unsubscribed = false;\n    isSupported().then(supported => {\n      if (unsubscribed) return;\n      if (supported) {\n        observer.next({ type: \"add\", descriptor: null });\n        observer.complete();\n      } else {\n        observer.error(\n          new TransportError(\n            \"U2F browser support is needed for Ledger. \" +\n              \"Please use Chrome, Opera or Firefox with a U2F extension. \" +\n              \"Also make sure you're on an HTTPS connection\",\n            \"U2FNotSupported\"\n          )\n        );\n      }\n    });\n    return {\n      unsubscribe: () => {\n        unsubscribed = true;\n      }\n    };\n  };\n\n  scrambleKey: Buffer;\n\n  unwrap: boolean = true;\n\n  /**\n   * static function to create a new Transport from a connected Ledger device discoverable via U2F (browser support)\n   */\n  static async open(_: *, _openTimeout?: number = 5000): Promise<TransportU2F> {\n    return new TransportU2F();\n  }\n\n  constructor() {\n    super();\n    transportInstances.push(this);\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  async exchange(apdu: Buffer): Promise<Buffer> {\n    try {\n      return await attemptExchange(\n        apdu,\n        this.exchangeTimeout,\n        this.scrambleKey,\n        this.unwrap\n      );\n    } catch (e) {\n      const isU2FError = typeof e.metaData === \"object\";\n      if (isU2FError) {\n        if (isTimeoutU2FError(e)) {\n          emitDisconnect();\n        }\n        // the wrapping make error more usable and \"printable\" to the end user.\n        throw wrapU2FTransportError(\n          e,\n          \"Failed to sign with Ledger device: U2F \" + e.metaData.type,\n          \"U2F_\" + e.metaData.code\n        );\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   */\n  setScrambleKey(scrambleKey: string) {\n    this.scrambleKey = Buffer.from(scrambleKey, \"ascii\");\n  }\n\n  /**\n   */\n  setUnwrap(unwrap: boolean) {\n    this.unwrap = unwrap;\n  }\n\n  close(): Promise<void> {\n    // u2f have no way to clean things up\n    return Promise.resolve();\n  }\n}\n","'use strict';\nmodule.exports = require( './lib/u2f-api' );","'use strict';\n\nmodule.exports = API;\n\nvar chromeApi = require( './google-u2f-api' );\n\n// Feature detection (yes really)\nvar isBrowser = ( typeof navigator !== 'undefined' ) && !!navigator.userAgent;\nvar isSafari = isBrowser && navigator.userAgent.match( /Safari\\// )\n\t&& !navigator.userAgent.match( /Chrome\\// );\nvar isEDGE = isBrowser && navigator.userAgent.match( /Edge\\/1[2345]/ );\n\nvar _backend = null;\nfunction getBackend( Promise )\n{\n\tif ( !_backend )\n\t\t_backend = new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction notSupported( )\n\t\t\t{\n\t\t\t\t// Note; {native: true} means *not* using Google's hack\n\t\t\t\tresolve( { u2f: null, native: true } );\n\t\t\t}\n\n\t\t\tif ( !isBrowser )\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( isSafari )\n\t\t\t\t// Safari doesn't support U2F, and the Safari-FIDO-U2F\n\t\t\t\t// extension lacks full support (Multi-facet apps), so we\n\t\t\t\t// block it until proper support.\n\t\t\t\treturn notSupported( );\n\n\t\t\tvar hasNativeSupport =\n\t\t\t\t( typeof window.u2f !== 'undefined' ) &&\n\t\t\t\t( typeof window.u2f.sign === 'function' );\n\n\t\t\tif ( hasNativeSupport )\n\t\t\t\tresolve( { u2f: window.u2f, native: true } );\n\n\t\t\tif ( isEDGE )\n\t\t\t\t// We don't want to check for Google's extension hack on EDGE\n\t\t\t\t// as it'll cause trouble (popups, etc)\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( location.protocol === 'http:' )\n\t\t\t\t// U2F isn't supported over http, only https\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( typeof MessageChannel === 'undefined' )\n\t\t\t\t// Unsupported browser, the chrome hack would throw\n\t\t\t\treturn notSupported( );\n\n\t\t\t// Test for google extension support\n\t\t\tchromeApi.isSupported( function( ok )\n\t\t\t{\n\t\t\t\tif ( ok )\n\t\t\t\t\tresolve( { u2f: chromeApi, native: false } );\n\t\t\t\telse\n\t\t\t\t\tnotSupported( );\n\t\t\t} );\n\t\t} );\n\n\treturn _backend;\n}\n\nfunction API( Promise )\n{\n\treturn {\n\t\tisSupported   : isSupported.bind( Promise ),\n\t\tensureSupport : ensureSupport.bind( Promise ),\n\t\tregister      : register.bind( Promise ),\n\t\tsign          : sign.bind( Promise ),\n\t\tErrorCodes    : API.ErrorCodes,\n\t\tErrorNames    : API.ErrorNames\n\t};\n}\n\nAPI.ErrorCodes = {\n\tCANCELLED: -1,\n\tOK: 0,\n\tOTHER_ERROR: 1,\n\tBAD_REQUEST: 2,\n\tCONFIGURATION_UNSUPPORTED: 3,\n\tDEVICE_INELIGIBLE: 4,\n\tTIMEOUT: 5\n};\nAPI.ErrorNames = {\n\t\"-1\": \"CANCELLED\",\n\t\"0\": \"OK\",\n\t\"1\": \"OTHER_ERROR\",\n\t\"2\": \"BAD_REQUEST\",\n\t\"3\": \"CONFIGURATION_UNSUPPORTED\",\n\t\"4\": \"DEVICE_INELIGIBLE\",\n\t\"5\": \"TIMEOUT\"\n};\n\nfunction makeError( msg, err )\n{\n\tvar code = err != null ? err.errorCode : 1; // Default to OTHER_ERROR\n\tvar type = API.ErrorNames[ '' + code ];\n\tvar error = new Error( msg );\n\terror.metaData = {\n\t\ttype: type,\n\t\tcode: code\n\t}\n\treturn error;\n}\n\nfunction deferPromise( Promise, promise )\n{\n\tvar ret = { };\n\tret.promise = new Promise( function( resolve, reject ) {\n\t\tret.resolve = resolve;\n\t\tret.reject = reject;\n\t\tpromise.then( resolve, reject );\n\t} );\n\t/**\n\t * Reject request promise and disconnect port if 'disconnect' flag is true\n\t * @param {string} msg\n\t * @param {boolean} disconnect\n\t */\n\tret.promise.cancel = function( msg, disconnect )\n\t{\n\t\tgetBackend( Promise )\n\t\t.then( function( backend )\n\t\t{\n\t\t\tif ( disconnect && !backend.native )\n\t\t\t\tbackend.u2f.disconnect( );\n\n\t\t\tret.reject( makeError( msg, { errorCode: -1 } ) );\n\t\t} );\n\t};\n\treturn ret;\n}\n\nfunction defer( Promise, fun )\n{\n\treturn deferPromise( Promise, new Promise( function( resolve, reject )\n\t{\n\t\ttry\n\t\t{\n\t\t\tfun && fun( resolve, reject );\n\t\t}\n\t\tcatch ( err )\n\t\t{\n\t\t\treject( err );\n\t\t}\n\t} ) );\n}\n\nfunction isSupported( )\n{\n\tvar Promise = this;\n\n\treturn getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\treturn !!backend.u2f;\n\t} );\n}\n\nfunction _ensureSupport( backend )\n{\n\tif ( !backend.u2f )\n\t{\n\t\tif ( location.protocol === 'http:' )\n\t\t\tthrow new Error( \"U2F isn't supported over http, only https\" );\n\t\tthrow new Error( \"U2F not supported\" );\n\t}\n}\n\nfunction ensureSupport( )\n{\n\tvar Promise = this;\n\n\treturn getBackend( Promise )\n\t.then( _ensureSupport );\n}\n\nfunction register( registerRequests, signRequests /* = null */, timeout )\n{\n\tvar Promise = this;\n\n\tif ( !Array.isArray( registerRequests ) )\n\t\tregisterRequests = [ registerRequests ];\n\n\tif ( typeof signRequests === 'number' && typeof timeout === 'undefined' )\n\t{\n\t\ttimeout = signRequests;\n\t\tsignRequests = null;\n\t}\n\n\tif ( !signRequests )\n\t\tsignRequests = [ ];\n\n\treturn deferPromise( Promise, getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\t_ensureSupport( backend );\n\n\t\tvar native = backend.native;\n\t\tvar u2f = backend.u2f;\n\n\t\treturn new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction cbNative( response )\n\t\t\t{\n\t\t\t\tif ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Registration failed\", response ) );\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete response.errorCode;\n\t\t\t\t\tresolve( response );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cbChrome( err, response )\n\t\t\t{\n\t\t\t\tif ( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse if ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Registration failed\", response ) );\n\t\t\t\telse\n\t\t\t\t\tresolve( response );\n\t\t\t}\n\n\t\t\tif ( native )\n\t\t\t{\n\t\t\t\tvar appId = registerRequests[ 0 ].appId;\n\n\t\t\t\tu2f.register(\n\t\t\t\t\tappId, registerRequests, signRequests, cbNative, timeout );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu2f.register(\n\t\t\t\t\tregisterRequests, signRequests, cbChrome, timeout );\n\t\t\t}\n\t\t} );\n\t} ) ).promise;\n}\n\nfunction sign( signRequests, timeout )\n{\n\tvar Promise = this;\n\n\tif ( !Array.isArray( signRequests ) )\n\t\tsignRequests = [ signRequests ];\n\n\treturn deferPromise( Promise, getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\t_ensureSupport( backend );\n\n\t\tvar native = backend.native;\n\t\tvar u2f = backend.u2f;\n\n\t\treturn new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction cbNative( response )\n\t\t\t{\n\t\t\t\tif ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Sign failed\", response ) );\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete response.errorCode;\n\t\t\t\t\tresolve( response );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cbChrome( err, response )\n\t\t\t{\n\t\t\t\tif ( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse if ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Sign failed\", response ) );\n\t\t\t\telse\n\t\t\t\t\tresolve( response );\n\t\t\t}\n\n\t\t\tif ( native )\n\t\t\t{\n\t\t\t\tvar appId = signRequests[ 0 ].appId;\n\t\t\t\tvar challenge = signRequests[ 0 ].challenge;\n\n\t\t\t\tu2f.sign( appId, challenge, signRequests, cbNative, timeout );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu2f.sign( signRequests, cbChrome, timeout );\n\t\t\t}\n\t\t} );\n\t} ) ).promise;\n}\n\nfunction makeDefault( func )\n{\n\tAPI[ func ] = function( )\n\t{\n\t\tif ( !global.Promise )\n\t\t\t// This is very unlikely to ever happen, since browsers\n\t\t\t// supporting U2F will most likely support Promises.\n\t\t\tthrow new Error( \"The platform doesn't natively support promises\" );\n\n\t\tvar args = [ ].slice.call( arguments );\n\t\treturn API( global.Promise )[ func ].apply( null, args );\n\t};\n}\n\n// Provide default functions using the built-in Promise if available.\nmakeDefault( 'isSupported' );\nmakeDefault( 'ensureSupport' );\nmakeDefault( 'register' );\nmakeDefault( 'sign' );\n","// Copyright 2014 Google Inc. All rights reserved\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file or at\n// https://developers.google.com/open-source/licenses/bsd\n\n/**\n * @fileoverview The U2F api.\n */\n\n'use strict';\n\n/** Namespace for the U2F api.\n * @type {Object}\n */\nvar u2f = u2f || {};\n\nmodule.exports = u2f; // Adaptation for u2f-api package\n\n/**\n * The U2F extension id\n * @type {string}\n * @const\n */\nu2f.EXTENSION_ID = 'kmendfapggjehodndflmmgagdbamhnfd';\n\n/**\n * Message types for messsages to/from the extension\n * @const\n * @enum {string}\n */\nu2f.MessageTypes = {\n  'U2F_REGISTER_REQUEST': 'u2f_register_request',\n  'U2F_SIGN_REQUEST': 'u2f_sign_request',\n  'U2F_REGISTER_RESPONSE': 'u2f_register_response',\n  'U2F_SIGN_RESPONSE': 'u2f_sign_response'\n};\n\n/**\n * Response status codes\n * @const\n * @enum {number}\n */\nu2f.ErrorCodes = {\n  'OK': 0,\n  'OTHER_ERROR': 1,\n  'BAD_REQUEST': 2,\n  'CONFIGURATION_UNSUPPORTED': 3,\n  'DEVICE_INELIGIBLE': 4,\n  'TIMEOUT': 5\n};\n\n/**\n * A message type for registration requests\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   signRequests: Array.<u2f.SignRequest>,\n *   registerRequests: ?Array.<u2f.RegisterRequest>,\n *   timeoutSeconds: ?number,\n *   requestId: ?number\n * }}\n */\nu2f.Request;\n\n/**\n * A message for registration responses\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   responseData: (u2f.Error | u2f.RegisterResponse | u2f.SignResponse),\n *   requestId: ?number\n * }}\n */\nu2f.Response;\n\n/**\n * An error object for responses\n * @typedef {{\n *   errorCode: u2f.ErrorCodes,\n *   errorMessage: ?string\n * }}\n */\nu2f.Error;\n\n/**\n * Data object for a single sign request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   keyHandle: string,\n *   appId: string\n * }}\n */\nu2f.SignRequest;\n\n/**\n * Data object for a sign response.\n * @typedef {{\n *   keyHandle: string,\n *   signatureData: string,\n *   clientData: string\n * }}\n */\nu2f.SignResponse;\n\n/**\n * Data object for a registration request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   appId: string\n * }}\n */\nu2f.RegisterRequest;\n\n/**\n * Data object for a registration response.\n * @typedef {{\n *   registrationData: string,\n *   clientData: string\n * }}\n */\nu2f.RegisterResponse;\n\n\n// Low level MessagePort API support\n\n/**\n * Call MessagePort disconnect\n */\nu2f.disconnect = function() {\n  if (u2f.port_ && u2f.port_.port_) {\n    u2f.port_.port_.disconnect();\n    u2f.port_ = null;\n  }\n};\n\n/**\n * Sets up a MessagePort to the U2F extension using the\n * available mechanisms.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n */\nu2f.getMessagePort = function(callback) {\n  if (typeof chrome != 'undefined' && chrome.runtime) {\n    // The actual message here does not matter, but we need to get a reply\n    // for the callback to run. Thus, send an empty signature request\n    // in order to get a failure response.\n    var msg = {\n      type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n      signRequests: []\n    };\n    chrome.runtime.sendMessage(u2f.EXTENSION_ID, msg, function() {\n      if (!chrome.runtime.lastError) {\n        // We are on a whitelisted origin and can talk directly\n        // with the extension.\n        u2f.getChromeRuntimePort_(callback);\n      } else {\n        // chrome.runtime was available, but we couldn't message\n        // the extension directly, use iframe\n        u2f.getIframePort_(callback);\n      }\n    });\n  } else {\n    // chrome.runtime was not available at all, which is normal\n    // when this origin doesn't have access to any extensions.\n    u2f.getIframePort_(callback);\n  }\n};\n\n/**\n * Connects directly to the extension via chrome.runtime.connect\n * @param {function(u2f.WrappedChromeRuntimePort_)} callback\n * @private\n */\nu2f.getChromeRuntimePort_ = function(callback) {\n  var port = chrome.runtime.connect(u2f.EXTENSION_ID,\n    {'includeTlsChannelId': true});\n  setTimeout(function() {\n    callback(null, new u2f.WrappedChromeRuntimePort_(port));\n  }, 0);\n};\n\n/**\n * A wrapper for chrome.runtime.Port that is compatible with MessagePort.\n * @param {Port} port\n * @constructor\n * @private\n */\nu2f.WrappedChromeRuntimePort_ = function(port) {\n  this.port_ = port;\n};\n\n/**\n * Posts a message on the underlying channel.\n * @param {Object} message\n */\nu2f.WrappedChromeRuntimePort_.prototype.postMessage = function(message) {\n  this.port_.postMessage(message);\n};\n\n/**\n * Emulates the HTML 5 addEventListener interface. Works only for the\n * onmessage event, which is hooked up to the chrome.runtime.Port.onMessage.\n * @param {string} eventName\n * @param {function({data: Object})} handler\n */\nu2f.WrappedChromeRuntimePort_.prototype.addEventListener =\n    function(eventName, handler) {\n  var name = eventName.toLowerCase();\n  if (name == 'message' || name == 'onmessage') {\n    this.port_.onMessage.addListener(function(message) {\n      // Emulate a minimal MessageEvent object\n      handler({'data': message});\n    });\n  } else {\n    console.error('WrappedChromeRuntimePort only supports onMessage');\n  }\n};\n\n/**\n * Sets up an embedded trampoline iframe, sourced from the extension.\n * @param {function(MessagePort)} callback\n * @private\n */\nu2f.getIframePort_ = function(callback) {\n  // Create the iframe\n  var iframeOrigin = 'chrome-extension://' + u2f.EXTENSION_ID;\n  var iframe = document.createElement('iframe');\n  iframe.src = iframeOrigin + '/u2f-comms.html';\n  iframe.setAttribute('style', 'display:none');\n  document.body.appendChild(iframe);\n\n  var hasCalledBack = false;\n\n  var channel = new MessageChannel();\n  var ready = function(message) {\n    if (message.data == 'ready') {\n      channel.port1.removeEventListener('message', ready);\n      if (!hasCalledBack)\n      {\n        hasCalledBack = true;\n        callback(null, channel.port1);\n      }\n    } else {\n      console.error('First event on iframe port was not \"ready\"');\n    }\n  };\n  channel.port1.addEventListener('message', ready);\n  channel.port1.start();\n\n  iframe.addEventListener('load', function() {\n    // Deliver the port to the iframe and initialize\n    iframe.contentWindow.postMessage('init', iframeOrigin, [channel.port2]);\n  });\n\n  // Give this 200ms to initialize, after that, we treat this method as failed\n  setTimeout(function() {\n    if (!hasCalledBack)\n    {\n      hasCalledBack = true;\n      callback(new Error(\"IFrame extension not supported\"));\n    }\n  }, 200);\n};\n\n\n// High-level JS API\n\n/**\n * Default extension response timeout in seconds.\n * @const\n */\nu2f.EXTENSION_TIMEOUT_SEC = 30;\n\n/**\n * A singleton instance for a MessagePort to the extension.\n * @type {MessagePort|u2f.WrappedChromeRuntimePort_}\n * @private\n */\nu2f.port_ = null;\n\n/**\n * Callbacks waiting for a port\n * @type {Array.<function((MessagePort|u2f.WrappedChromeRuntimePort_))>}\n * @private\n */\nu2f.waitingForPort_ = [];\n\n/**\n * A counter for requestIds.\n * @type {number}\n * @private\n */\nu2f.reqCounter_ = 0;\n\n/**\n * A map from requestIds to client callbacks\n * @type {Object.<number,(function((u2f.Error|u2f.RegisterResponse))\n *                       |function((u2f.Error|u2f.SignResponse)))>}\n * @private\n */\nu2f.callbackMap_ = {};\n\n/**\n * Creates or retrieves the MessagePort singleton to use.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n * @private\n */\nu2f.getPortSingleton_ = function(callback) {\n  if (u2f.port_) {\n    callback(null, u2f.port_);\n  } else {\n    if (u2f.waitingForPort_.length == 0) {\n      u2f.getMessagePort(function(err, port) {\n        if (!err) {\n          u2f.port_ = port;\n          u2f.port_.addEventListener('message',\n            /** @type {function(Event)} */ (u2f.responseHandler_));\n        }\n\n        // Careful, here be async callbacks. Maybe.\n        while (u2f.waitingForPort_.length)\n          u2f.waitingForPort_.shift()(err, port);\n      });\n    }\n    u2f.waitingForPort_.push(callback);\n  }\n};\n\n/**\n * Handles response messages from the extension.\n * @param {MessageEvent.<u2f.Response>} message\n * @private\n */\nu2f.responseHandler_ = function(message) {\n  var response = message.data;\n  var reqId = response['requestId'];\n  if (!reqId || !u2f.callbackMap_[reqId]) {\n    console.error('Unknown or missing requestId in response.');\n    return;\n  }\n  var cb = u2f.callbackMap_[reqId];\n  delete u2f.callbackMap_[reqId];\n  cb(null, response['responseData']);\n};\n\n/**\n * Calls the callback with true or false as first and only argument\n * @param {Function} callback\n */\nu2f.isSupported = function(callback) {\n  u2f.getPortSingleton_(function(err, port) {\n    callback(!err);\n  });\n}\n\n/**\n * Dispatches an array of sign requests to available U2F tokens.\n * @param {Array.<u2f.SignRequest>} signRequests\n * @param {function((u2f.Error|u2f.SignResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.sign = function(signRequests, callback, opt_timeoutSeconds) {\n  u2f.getPortSingleton_(function(err, port) {\n    if (err)\n      return callback(err);\n\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var req = {\n      type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n      signRequests: signRequests,\n      timeoutSeconds: (typeof opt_timeoutSeconds !== 'undefined' ?\n        opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC),\n      requestId: reqId\n    };\n    port.postMessage(req);\n  });\n};\n\n/**\n * Dispatches register requests to available U2F tokens. An array of sign\n * requests identifies already registered tokens.\n * @param {Array.<u2f.RegisterRequest>} registerRequests\n * @param {Array.<u2f.SignRequest>} signRequests\n * @param {function((u2f.Error|u2f.RegisterResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.register = function(registerRequests, signRequests,\n    callback, opt_timeoutSeconds) {\n  u2f.getPortSingleton_(function(err, port) {\n    if (err)\n      return callback(err);\n\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var req = {\n      type: u2f.MessageTypes.U2F_REGISTER_REQUEST,\n      signRequests: signRequests,\n      registerRequests: registerRequests,\n      timeoutSeconds: (typeof opt_timeoutSeconds !== 'undefined' ?\n        opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC),\n      requestId: reqId\n    };\n    port.postMessage(req);\n  });\n};\n","//@flow\n\nimport EventEmitter from \"events\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport {\n  TransportRaceCondition,\n  TransportError,\n  StatusCodes,\n  getAltStatusMessage,\n  TransportStatusError\n} from \"@ledgerhq/errors\";\n\nexport {\n  TransportError,\n  TransportStatusError,\n  StatusCodes,\n  getAltStatusMessage\n};\n\n/**\n */\nexport type Subscription = { unsubscribe: () => void };\n\n/**\n */\nexport type Device = Object;\n\n/**\n * type: add or remove event\n * descriptor: a parameter that can be passed to open(descriptor)\n * deviceModel: device info on the model (is it a nano s, nano x, ...)\n * device: transport specific device info\n */\nexport type DescriptorEvent<Descriptor> = {\n  type: \"add\" | \"remove\",\n  descriptor: Descriptor,\n  deviceModel?: ?DeviceModel,\n  device?: Device\n};\n/**\n */\nexport type Observer<Ev> = $ReadOnly<{\n  next: (event: Ev) => mixed,\n  error: (e: any) => mixed,\n  complete: () => mixed\n}>;\n\n/**\n * Transport defines the generic interface to share between node/u2f impl\n * A **Descriptor** is a parametric type that is up to be determined for the implementation.\n * it can be for instance an ID, an file path, a URL,...\n */\nexport default class Transport<Descriptor> {\n  exchangeTimeout: number = 30000;\n  unresponsiveTimeout: number = 15000;\n  deviceModel: ?DeviceModel = null;\n\n  /**\n   * Statically check if a transport is supported on the user's platform/browser.\n   */\n  static +isSupported: () => Promise<boolean>;\n\n  /**\n   * List once all available descriptors. For a better granularity, checkout `listen()`.\n   * @return a promise of descriptors\n   * @example\n   * TransportFoo.list().then(descriptors => ...)\n   */\n  static +list: () => Promise<Array<Descriptor>>;\n\n  /**\n   * Listen all device events for a given Transport. The method takes an Obverver of DescriptorEvent and returns a Subscription (according to Observable paradigm https://github.com/tc39/proposal-observable )\n   * a DescriptorEvent is a `{ descriptor, type }` object. type can be `\"add\"` or `\"remove\"` and descriptor is a value you can pass to `open(descriptor)`.\n   * each listen() call will first emit all potential device already connected and then will emit events can come over times,\n   * for instance if you plug a USB device after listen() or a bluetooth device become discoverable.\n   * @param observer is an object with a next, error and complete function (compatible with observer pattern)\n   * @return a Subscription object on which you can `.unsubscribe()` to stop listening descriptors.\n   * @example\nconst sub = TransportFoo.listen({\n  next: e => {\n    if (e.type===\"add\") {\n      sub.unsubscribe();\n      const transport = await TransportFoo.open(e.descriptor);\n      ...\n    }\n  },\n  error: error => {},\n  complete: () => {}\n})\n   */\n  static +listen: (\n    observer: Observer<DescriptorEvent<Descriptor>>\n  ) => Subscription;\n\n  /**\n   * attempt to create a Transport instance with potentially a descriptor.\n   * @param descriptor: the descriptor to open the transport with.\n   * @param timeout: an optional timeout\n   * @return a Promise of Transport instance\n   * @example\nTransportFoo.open(descriptor).then(transport => ...)\n   */\n  static +open: (\n    descriptor: Descriptor,\n    timeout?: number\n  ) => Promise<Transport<Descriptor>>;\n\n  /**\n   * low level api to communicate with the device\n   * This method is for implementations to implement but should not be directly called.\n   * Instead, the recommanded way is to use send() method\n   * @param apdu the data to send\n   * @return a Promise of response data\n   */\n  exchange(_apdu: Buffer): Promise<Buffer> {\n    throw new Error(\"exchange not implemented\");\n  }\n\n  /**\n   * set the \"scramble key\" for the next exchanges with the device.\n   * Each App can have a different scramble key and they internally will set it at instanciation.\n   * @param key the scramble key\n   */\n  setScrambleKey(_key: string) {}\n\n  /**\n   * close the exchange with the device.\n   * @return a Promise that ends when the transport is closed.\n   */\n  close(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  _events = new EventEmitter();\n\n  /**\n   * Listen to an event on an instance of transport.\n   * Transport implementation can have specific events. Here is the common events:\n   * * `\"disconnect\"` : triggered if Transport is disconnected\n   */\n  on(eventName: string, cb: Function) {\n    this._events.on(eventName, cb);\n  }\n\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n  off(eventName: string, cb: Function) {\n    this._events.removeListener(eventName, cb);\n  }\n\n  emit(event: string, ...args: *) {\n    this._events.emit(event, ...args);\n  }\n\n  /**\n   * Enable or not logs of the binary exchange\n   */\n  setDebugMode() {\n    console.warn(\n      \"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\"\n    );\n  }\n\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n  setExchangeTimeout(exchangeTimeout: number) {\n    this.exchangeTimeout = exchangeTimeout;\n  }\n\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n  setExchangeUnresponsiveTimeout(unresponsiveTimeout: number) {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  }\n\n  /**\n   * wrapper on top of exchange to simplify work of the implementation.\n   * @param cla\n   * @param ins\n   * @param p1\n   * @param p2\n   * @param data\n   * @param statusList is a list of accepted status code (shorts). [0x9000] by default\n   * @return a Promise of response buffer\n   */\n  send = async (\n    cla: number,\n    ins: number,\n    p1: number,\n    p2: number,\n    data: Buffer = Buffer.alloc(0),\n    statusList: Array<number> = [StatusCodes.OK]\n  ): Promise<Buffer> => {\n    if (data.length >= 256) {\n      throw new TransportError(\n        \"data.length exceed 256 bytes limit. Got: \" + data.length,\n        \"DataLengthTooBig\"\n      );\n    }\n    const response = await this.exchange(\n      Buffer.concat([\n        Buffer.from([cla, ins, p1, p2]),\n        Buffer.from([data.length]),\n        data\n      ])\n    );\n    const sw = response.readUInt16BE(response.length - 2);\n    if (!statusList.some(s => s === sw)) {\n      throw new TransportStatusError(sw);\n    }\n    return response;\n  };\n\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\nTransportFoo.create().then(transport => ...)\n   */\n  static create(\n    openTimeout?: number = 3000,\n    listenTimeout?: number\n  ): Promise<Transport<Descriptor>> {\n    return new Promise((resolve, reject) => {\n      let found = false;\n      const sub = this.listen({\n        next: e => {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: e => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: () => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          if (!found) {\n            reject(\n              new TransportError(\n                this.ErrorMessage_NoDeviceFound,\n                \"NoDeviceFound\"\n              )\n            );\n          }\n        }\n      });\n      const listenTimeoutId = listenTimeout\n        ? setTimeout(() => {\n            sub.unsubscribe();\n            reject(\n              new TransportError(\n                this.ErrorMessage_ListenTimeout,\n                \"ListenTimeout\"\n              )\n            );\n          }, listenTimeout)\n        : null;\n    });\n  }\n\n  exchangeBusyPromise: ?Promise<void>;\n\n  // $FlowFixMe\n  exchangeAtomicImpl = async f => {\n    if (this.exchangeBusyPromise) {\n      throw new TransportRaceCondition(\n        \"An action was already pending on the Ledger device. Please deny or reconnect.\"\n      );\n    }\n    let resolveBusy;\n    const busyPromise = new Promise(r => {\n      resolveBusy = r;\n    });\n    this.exchangeBusyPromise = busyPromise;\n    let unresponsiveReached = false;\n    const timeout = setTimeout(() => {\n      unresponsiveReached = true;\n      this.emit(\"unresponsive\");\n    }, this.unresponsiveTimeout);\n    try {\n      const res = await f();\n      if (unresponsiveReached) {\n        this.emit(\"responsive\");\n      }\n      return res;\n    } finally {\n      clearTimeout(timeout);\n      if (resolveBusy) resolveBusy();\n      this.exchangeBusyPromise = null;\n    }\n  };\n\n  decorateAppAPIMethods(\n    self: Object,\n    methods: Array<string>,\n    scrambleKey: string\n  ) {\n    for (let methodName of methods) {\n      self[methodName] = this.decorateAppAPIMethod(\n        methodName,\n        self[methodName],\n        self,\n        scrambleKey\n      );\n    }\n  }\n\n  _appAPIlock = null;\n  decorateAppAPIMethod<R, A: any[]>(\n    methodName: string,\n    f: (...args: A) => Promise<R>,\n    ctx: *,\n    scrambleKey: string\n  ): (...args: A) => Promise<R> {\n    return async (...args) => {\n      const { _appAPIlock } = this;\n      if (_appAPIlock) {\n        return Promise.reject(\n          new TransportError(\n            \"Ledger Device is busy (lock \" + _appAPIlock + \")\",\n            \"TransportLocked\"\n          )\n        );\n      }\n      try {\n        this._appAPIlock = methodName;\n        this.setScrambleKey(scrambleKey);\n        return await f.apply(ctx, args);\n      } finally {\n        this._appAPIlock = null;\n      }\n    };\n  }\n\n  static ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\n  static ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","// @flow\n\n/**\n * A Log object\n */\nexport type Log = {\n  type: string,\n  message?: string,\n  data?: any,\n  id: string, // unique amount all logs\n  date: Date // date of the log\n};\n\nexport type Unsubscribe = () => void;\n\nlet id = 0;\nconst subscribers = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = { type, id: String(++id), date: new Date() };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Log => void): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n","/********************************************************************************\n *   Ledger Node JS API\n *   (c) 2016-2017 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ********************************************************************************/\n//@flow\n\n// FIXME drop:\nimport { splitPath, foreach } from \"./utils\";\nimport { EthAppPleaseEnableContractData } from \"@ledgerhq/errors\";\nimport type Transport from \"@ledgerhq/hw-transport\";\nimport { BigNumber } from \"bignumber.js\";\n\nfunction hexBuffer(str: string): Buffer {\n  return Buffer.from(str.startsWith(\"0x\") ? str.slice(2) : str, \"hex\");\n}\n\nfunction maybeHexBuffer(str: ?string): ?Buffer {\n  if (!str) return null;\n  return hexBuffer(str);\n}\n\nconst remapTransactionRelatedErrors = e => {\n  if (e && e.statusCode === 0x6a80) {\n    return new EthAppPleaseEnableContractData(\n      \"Please enable Contract data on the Ethereum app Settings\"\n    );\n  }\n  return e;\n};\n\n/**\n * Ethereum API\n *\n * @example\n * import Eth from \"@ledgerhq/hw-app-eth\";\n * const eth = new Eth(transport)\n */\nexport default class Eth {\n  transport: Transport<*>;\n\n  constructor(transport: Transport<*>, scrambleKey: string = \"w0w\") {\n    this.transport = transport;\n    transport.decorateAppAPIMethods(\n      this,\n      [\n        \"getAddress\",\n        \"provideERC20TokenInformation\",\n        \"signTransaction\",\n        \"signPersonalMessage\",\n        \"getAppConfiguration\",\n        \"starkGetPublicKey\",\n        \"starkSignOrder\",\n        \"starkSignTransfer\",\n        \"starkProvideQuantum\"\n      ],\n      scrambleKey\n    );\n  }\n\n  /**\n   * get Ethereum address for a given BIP 32 path.\n   * @param path a path in BIP 32 format\n   * @option boolDisplay optionally enable or not the display\n   * @option boolChaincode optionally enable or not the chaincode request\n   * @return an object with a publicKey, address and (optionally) chainCode\n   * @example\n   * eth.getAddress(\"44'/60'/0'/0/0\").then(o => o.address)\n   */\n  getAddress(\n    path: string,\n    boolDisplay?: boolean,\n    boolChaincode?: boolean\n  ): Promise<{\n    publicKey: string,\n    address: string,\n    chainCode?: string\n  }> {\n    let paths = splitPath(path);\n    let buffer = Buffer.alloc(1 + paths.length * 4);\n    buffer[0] = paths.length;\n    paths.forEach((element, index) => {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    return this.transport\n      .send(\n        0xe0,\n        0x02,\n        boolDisplay ? 0x01 : 0x00,\n        boolChaincode ? 0x01 : 0x00,\n        buffer\n      )\n      .then(response => {\n        let result = {};\n        let publicKeyLength = response[0];\n        let addressLength = response[1 + publicKeyLength];\n        result.publicKey = response\n          .slice(1, 1 + publicKeyLength)\n          .toString(\"hex\");\n        result.address =\n          \"0x\" +\n          response\n            .slice(\n              1 + publicKeyLength + 1,\n              1 + publicKeyLength + 1 + addressLength\n            )\n            .toString(\"ascii\");\n        if (boolChaincode) {\n          result.chainCode = response\n            .slice(\n              1 + publicKeyLength + 1 + addressLength,\n              1 + publicKeyLength + 1 + addressLength + 32\n            )\n            .toString(\"hex\");\n        }\n        return result;\n      });\n  }\n\n  /**\n   * This commands provides a trusted description of an ERC 20 token\n   * to associate a contract address with a ticker and number of decimals.\n   *\n   * It shall be run immediately before performing a transaction involving a contract\n   * calling this contract address to display the proper token information to the user if necessary.\n   *\n   * @param {*} info: a blob from \"erc20.js\" utilities that contains all token information.\n   *\n   * @example\n   * import { byContractAddress } from \"@ledgerhq/hw-app-eth/erc20\"\n   * const zrxInfo = byContractAddress(\"0xe41d2489571d322189246dafa5ebde1f4699f498\")\n   * if (zrxInfo) await appEth.provideERC20TokenInformation(zrxInfo)\n   * const signed = await appEth.signTransaction(path, rawTxHex)\n   */\n  provideERC20TokenInformation({ data }: { data: Buffer }): Promise<boolean> {\n    return this.transport.send(0xe0, 0x0a, 0x00, 0x00, data).then(\n      () => true,\n      e => {\n        if (e && e.statusCode === 0x6d00) {\n          // this case happen for older version of ETH app, since older app version had the ERC20 data hardcoded, it's fine to assume it worked.\n          // we return a flag to know if the call was effective or not\n          return false;\n        }\n        throw e;\n      }\n    );\n  }\n\n  /**\n   * You can sign a transaction and retrieve v, r, s given the raw transaction and the BIP 32 path of the account to sign\n   * @example\n   eth.signTransaction(\"44'/60'/0'/0/0\", \"e8018504e3b292008252089428ee52a8f3d6e5d15f8b131996950d7f296c7952872bd72a2487400080\").then(result => ...)\n   */\n  signTransaction(\n    path: string,\n    rawTxHex: string\n  ): Promise<{\n    s: string,\n    v: string,\n    r: string\n  }> {\n    let paths = splitPath(path);\n    let offset = 0;\n    let rawTx = Buffer.from(rawTxHex, \"hex\");\n    let toSend = [];\n    let response;\n    while (offset !== rawTx.length) {\n      let maxChunkSize = offset === 0 ? 150 - 1 - paths.length * 4 : 150;\n      let chunkSize =\n        offset + maxChunkSize > rawTx.length\n          ? rawTx.length - offset\n          : maxChunkSize;\n      let buffer = Buffer.alloc(\n        offset === 0 ? 1 + paths.length * 4 + chunkSize : chunkSize\n      );\n      if (offset === 0) {\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n          buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        rawTx.copy(buffer, 1 + 4 * paths.length, offset, offset + chunkSize);\n      } else {\n        rawTx.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    return foreach(toSend, (data, i) =>\n      this.transport\n        .send(0xe0, 0x04, i === 0 ? 0x00 : 0x80, 0x00, data)\n        .then(apduResponse => {\n          response = apduResponse;\n        })\n    ).then(\n      () => {\n        const v = response.slice(0, 1).toString(\"hex\");\n        const r = response.slice(1, 1 + 32).toString(\"hex\");\n        const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n        return { v, r, s };\n      },\n      e => {\n        throw remapTransactionRelatedErrors(e);\n      }\n    );\n  }\n\n  /**\n   */\n  getAppConfiguration(): Promise<{\n    arbitraryDataEnabled: number,\n    erc20ProvisioningNecessary: number,\n    starkEnabled: number,\n    version: string\n  }> {\n    return this.transport.send(0xe0, 0x06, 0x00, 0x00).then(response => {\n      let result = {};\n      result.arbitraryDataEnabled = response[0] & 0x01;\n      result.erc20ProvisioningNecessary = response[0] & 0x02;\n      result.starkEnabled = response[0] & 0x04;\n      result.version = \"\" + response[1] + \".\" + response[2] + \".\" + response[3];\n      return result;\n    });\n  }\n\n  /**\n  * You can sign a message according to eth_sign RPC call and retrieve v, r, s given the message and the BIP 32 path of the account to sign.\n  * @example\neth.signPersonalMessage(\"44'/60'/0'/0/0\", Buffer.from(\"test\").toString(\"hex\")).then(result => {\n  var v = result['v'] - 27;\n  v = v.toString(16);\n  if (v.length < 2) {\n    v = \"0\" + v;\n  }\n  console.log(\"Signature 0x\" + result['r'] + result['s'] + v);\n})\n   */\n  signPersonalMessage(\n    path: string,\n    messageHex: string\n  ): Promise<{\n    v: number,\n    s: string,\n    r: string\n  }> {\n    let paths = splitPath(path);\n    let offset = 0;\n    let message = Buffer.from(messageHex, \"hex\");\n    let toSend = [];\n    let response;\n    while (offset !== message.length) {\n      let maxChunkSize = offset === 0 ? 150 - 1 - paths.length * 4 - 4 : 150;\n      let chunkSize =\n        offset + maxChunkSize > message.length\n          ? message.length - offset\n          : maxChunkSize;\n      let buffer = Buffer.alloc(\n        offset === 0 ? 1 + paths.length * 4 + 4 + chunkSize : chunkSize\n      );\n      if (offset === 0) {\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n          buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        buffer.writeUInt32BE(message.length, 1 + 4 * paths.length);\n        message.copy(\n          buffer,\n          1 + 4 * paths.length + 4,\n          offset,\n          offset + chunkSize\n        );\n      } else {\n        message.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    return foreach(toSend, (data, i) =>\n      this.transport\n        .send(0xe0, 0x08, i === 0 ? 0x00 : 0x80, 0x00, data)\n        .then(apduResponse => {\n          response = apduResponse;\n        })\n    ).then(() => {\n      const v = response[0];\n      const r = response.slice(1, 1 + 32).toString(\"hex\");\n      const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n      return { v, r, s };\n    });\n  }\n\n  /**\n   * get Stark public key for a given BIP 32 path.\n   * @param path a path in BIP 32 format\n   * @option boolDisplay optionally enable or not the display\n   * @return the Stark public key\n   */\n  starkGetPublicKey(path: string, boolDisplay?: boolean): Promise<Buffer> {\n    let paths = splitPath(path);\n    let buffer = Buffer.alloc(1 + paths.length * 4);\n    buffer[0] = paths.length;\n    paths.forEach((element, index) => {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    return this.transport\n      .send(0xf0, 0x02, boolDisplay ? 0x01 : 0x00, 0x00, buffer)\n      .then(response => {\n        return response.slice(0, response.length - 2);\n      });\n  }\n\n  /**\n   * sign a Stark order\n   * @param path a path in BIP 32 format\n   * @option sourceTokenAddress contract address of the source token (not present for ETH)\n   * @param sourceQuantization quantization used for the source token\n   * @option destinationTokenAddress contract address of the destination token (not present for ETH)\n   * @param destinationQuantization quantization used for the destination token\n   * @param sourceVault ID of the source vault\n   * @param destinationVault ID of the destination vault\n   * @param amountSell amount to sell\n   * @param amountBuy amount to buy\n   * @param nonce transaction nonce\n   * @param timestamp transaction validity timestamp\n   * @return the signature\n   */\n  starkSignOrder(\n    path: string,\n    sourceTokenAddress?: string,\n    sourceQuantization: BigNumber,\n    destinationTokenAddress?: string,\n    destinationQuantization: BigNumber,\n    sourceVault: number,\n    destinationVault: number,\n    amountSell: BigNumber,\n    amountBuy: BigNumber,\n    nonce: number,\n    timestamp: number\n  ): Promise<Buffer> {\n    const sourceTokenAddressHex = maybeHexBuffer(sourceTokenAddress);\n    const destinationTokenAddressHex = maybeHexBuffer(destinationTokenAddress);\n    let paths = splitPath(path);\n    let buffer = Buffer.alloc(\n      1 + paths.length * 4 + 20 + 32 + 20 + 32 + 4 + 4 + 8 + 8 + 4 + 4,\n      0\n    );\n    let offset = 0;\n    buffer[0] = paths.length;\n    paths.forEach((element, index) => {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    offset = 1 + 4 * paths.length;\n    if (sourceTokenAddressHex) {\n      sourceTokenAddressHex.copy(buffer, offset);\n    }\n    offset += 20;\n    Buffer.from(sourceQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(\n      buffer,\n      offset\n    );\n    offset += 32;\n    if (destinationTokenAddressHex) {\n      destinationTokenAddressHex.copy(buffer, offset);\n    }\n    offset += 20;\n    Buffer.from(\n      destinationQuantization.toString(16).padStart(64, \"0\"),\n      \"hex\"\n    ).copy(buffer, offset);\n    offset += 32;\n    buffer.writeUInt32BE(sourceVault, offset);\n    offset += 4;\n    buffer.writeUInt32BE(destinationVault, offset);\n    offset += 4;\n    Buffer.from(amountSell.toString(16).padStart(16, \"0\"), \"hex\").copy(\n      buffer,\n      offset\n    );\n    offset += 8;\n    Buffer.from(amountBuy.toString(16).padStart(16, \"0\"), \"hex\").copy(\n      buffer,\n      offset\n    );\n    offset += 8;\n    buffer.writeUInt32BE(nonce, offset);\n    offset += 4;\n    buffer.writeUInt32BE(timestamp, offset);\n    return this.transport\n      .send(0xf0, 0x04, 0x01, 0x00, buffer)\n      .then(response => {\n        const r = response.slice(1, 1 + 32).toString(\"hex\");\n        const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n        return { r, s };\n      });\n  }\n\n  /**\n   * sign a Stark transfer\n   * @param path a path in BIP 32 format\n   * @option transferTokenAddress contract address of the token to be transferred (not present for ETH)\n   * @param transferQuantization quantization used for the token to be transferred\n   * @param targetPublicKey target Stark public key\n   * @param sourceVault ID of the source vault\n   * @param destinationVault ID of the destination vault\n   * @param amountTransfer amount to transfer\n   * @param nonce transaction nonce\n   * @param timestamp transaction validity timestamp\n   * @return the signature\n   */\n  starkSignTransfer(\n    path: string,\n    transferTokenAddress?: string,\n    transferQuantization: BigNumber,\n    targetPublicKey: string,\n    sourceVault: number,\n    destinationVault: number,\n    amountTransfer: BigNumber,\n    nonce: number,\n    timestamp: number\n  ): Promise<Buffer> {\n    const transferTokenAddressHex = maybeHexBuffer(transferTokenAddress);\n    const targetPublicKeyHex = hexBuffer(targetPublicKey);\n    let paths = splitPath(path);\n    let buffer = Buffer.alloc(\n      1 + paths.length * 4 + 20 + 32 + 32 + 4 + 4 + 8 + 4 + 4,\n      0\n    );\n    let offset = 0;\n    buffer[0] = paths.length;\n    paths.forEach((element, index) => {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    offset = 1 + 4 * paths.length;\n    if (transferTokenAddressHex) {\n      transferTokenAddressHex.copy(buffer, offset);\n    }\n    offset += 20;\n    Buffer.from(\n      transferQuantization.toString(16).padStart(64, \"0\"),\n      \"hex\"\n    ).copy(buffer, offset);\n    offset += 32;\n    targetPublicKeyHex.copy(buffer, offset);\n    offset += 32;\n    buffer.writeUInt32BE(sourceVault, offset);\n    offset += 4;\n    buffer.writeUInt32BE(destinationVault, offset);\n    offset += 4;\n    Buffer.from(amountTransfer.toString(16).padStart(16, \"0\"), \"hex\").copy(\n      buffer,\n      offset\n    );\n    offset += 8;\n    buffer.writeUInt32BE(nonce, offset);\n    offset += 4;\n    buffer.writeUInt32BE(timestamp, offset);\n    return this.transport\n      .send(0xf0, 0x04, 0x02, 0x00, buffer)\n      .then(response => {\n        const r = response.slice(1, 1 + 32).toString(\"hex\");\n        const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n        return { r, s };\n      });\n  }\n\n  /**\n   * provide quantization information before singing a deposit or withdrawal Stark powered contract call\n   *\n   * It shall be run following a provideERC20TokenInformation call for the given contract\n   *\n   * @param operationContract contract address of the token to be transferred (not present for ETH)\n   * @param operationQuantization quantization used for the token to be transferred\n   */\n  starkProvideQuantum(\n    operationContract?: string,\n    operationQuantization: BigNumber\n  ): Promise<boolean> {\n    const operationContractHex = maybeHexBuffer(operationContract);\n    let buffer = Buffer.alloc(20 + 32, 0);\n    if (operationContractHex) {\n      operationContractHex.copy(buffer, 0);\n    }\n    Buffer.from(\n      operationQuantization.toString(16).padStart(64, \"0\"),\n      \"hex\"\n    ).copy(buffer, 20);\n    return this.transport.send(0xf0, 0x08, 0x00, 0x00, buffer).then(\n      () => true,\n      e => {\n        if (e && e.statusCode === 0x6d00) {\n          // this case happen for ETH application versions not supporting Stark extensions\n          return false;\n        }\n        throw e;\n      }\n    );\n  }\n}\n","/********************************************************************************\n *   Ledger Node JS API\n *   (c) 2016-2017 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ********************************************************************************/\n//@flow\n\ntype Defer<T> = {\n  promise: Promise<T>,\n  resolve: T => void,\n  reject: any => void\n};\n\nexport function defer<T>(): Defer<T> {\n  let resolve, reject;\n  let promise = new Promise(function(success, failure) {\n    resolve = success;\n    reject = failure;\n  });\n  if (!resolve || !reject) throw \"defer() error\"; // this never happens and is just to make flow happy\n  return { promise, resolve, reject };\n}\n\n// TODO use bip32-path library\nexport function splitPath(path: string): number[] {\n  let result = [];\n  let components = path.split(\"/\");\n  components.forEach(element => {\n    let number = parseInt(element, 10);\n    if (isNaN(number)) {\n      return; // FIXME shouldn't it throws instead?\n    }\n    if (element.length > 1 && element[element.length - 1] === \"'\") {\n      number += 0x80000000;\n    }\n    result.push(number);\n  });\n  return result;\n}\n\n// TODO use async await\n\nexport function eachSeries<A>(arr: A[], fun: A => Promise<*>): Promise<*> {\n  return arr.reduce((p, e) => p.then(() => fun(e)), Promise.resolve());\n}\n\nexport function foreach<T, A>(\n  arr: T[],\n  callback: (T, number) => Promise<A>\n): Promise<A[]> {\n  function iterate(index, array, result) {\n    if (index >= array.length) {\n      return result;\n    } else\n      return callback(array[index], index).then(function(res) {\n        result.push(res);\n        return iterate(index + 1, array, result);\n      });\n  }\n  return Promise.resolve().then(() => iterate(0, arr, []));\n}\n\nexport function doIf(\n  condition: boolean,\n  callback: () => any | Promise<any>\n): Promise<void> {\n  return Promise.resolve().then(() => {\n    if (condition) {\n      return callback();\n    }\n  });\n}\n\nexport function asyncWhile<T>(\n  predicate: () => boolean,\n  callback: () => Promise<T>\n): Promise<Array<T>> {\n  function iterate(result) {\n    if (!predicate()) {\n      return result;\n    } else {\n      return callback().then(res => {\n        result.push(res);\n        return iterate(result);\n      });\n    }\n  }\n  return Promise.resolve([]).then(iterate);\n}\n"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/bnc-onboard/dist/esm/wallet-connect-1e5c4aeb.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","walletConnect","options","infuraKey","preferred","label","iconSrc","name","svg","wallet","fn","_wallet","mark","_callee","helpers","resetWalletState","_yield$import","WalletConnectProvider","provider","wrap","_context","prev","next","sent","infuraId","autoRefreshOnNetworkChange","wc","on","disconnected","walletName","abrupt","connect","enable","message","address","onChange","func","send","accounts","network","balance","get","_accounts","disconnect","killSession","stop","self","this","args","arguments","apply","err","undefined","_x","type","desktop"],"mappings":"8IAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GAAO,IAAM,IAAIC,EAAOP,EAAIK,GAAKC,GAAUE,EAAQD,EAAKC,MAAS,MAAOC,GAAwB,YAAfP,EAAOO,GAAsBF,EAAKG,KAAQT,EAAQO,GAAiBG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GA6G9OS,UAvGf,SAAuBC,GACrB,IAAIC,EAAYD,EAAQC,UACpBC,EAAYF,EAAQE,UACpBC,EAAQH,EAAQG,MAChBC,EAAUJ,EAAQI,QAEtB,MAAO,CACLC,KAAMF,GAAS,gBACfG,IAHQN,EAAQM,KAPI,ikDAWpBF,QAASA,EACTG,OAAQ,WACN,IAfqBC,EAejBC,GAfiBD,EAeyB,IAAmBE,MAAK,SAASC,EAAQC,GACrF,IAAIC,EAAkBC,EAAeC,EAAuBC,EAE5D,OAAO,IAAmBC,MAAK,SAAkBC,GAC/C,OACE,OAAQA,EAASC,KAAOD,EAASE,MAC/B,KAAK,EAGH,OAFAP,EAAmBD,EAAQC,iBAC3BK,EAASE,KAAO,EACT,mCAET,KAAK,EAaH,OAZAN,EAAgBI,EAASG,KACzBN,EAAwBD,EAAa,SACrCE,EAAW,IAAID,EAAsB,CACnCO,SAAUrB,KAEHsB,4BAA6B,EACtCP,EAASQ,GAAGC,GAAG,cAAc,WAC3BZ,EAAiB,CACfa,cAAc,EACdC,WAAY,qBAGTT,EAASU,OAAO,SAAU,CAC/BZ,SAAUA,EACV,UAAa,CACXX,KAAM,gBACNwB,QAAS,WACP,OAAO,IAAIhC,SAAQ,SAAUV,EAASC,GACpC4B,EAASc,SAAShC,KAAKX,GAAvB,OAAyC,WACvC,OAAOC,EAAO,CACZ2C,QAAS,+DAKjBC,QAAS,CACPC,SAAU,SAAkBC,GAC1BlB,EAASmB,KAAK,gBAAgBrC,MAAK,SAAUsC,GAC3C,OAAOA,EAAS,IAAMF,EAAKE,EAAS,OAEtCpB,EAASS,GAAG,mBAAmB,SAAUW,GACvC,OAAOF,EAAKE,EAAS,SAI3BC,QAAS,CACPJ,SAAU,SAAkBC,GAC1BlB,EAASmB,KAAK,eAAerC,KAAKoC,GAClClB,EAASS,GAAG,eAAgBS,KAGhCI,QAAS,CACPC,IAAK,WACH,OAAO,IAAI1C,SAAQ,SAAUV,GACtB6B,EAASQ,GAAGgB,UAAU,GAK3BxB,EAASmB,KAAK,iBAAkB,CAACnB,EAASQ,GAAGgB,UAAU,GAAI,WAJzDrD,EAAQ,WAQhBsD,WAAY,WACVzB,EAASQ,GAAGkB,cACZ1B,EAAS2B,WAKjB,KAAK,EACL,IAAK,MACH,OAAOzB,EAASyB,UAGrBhC,MA5F6B,WAAc,IAAIiC,EAAOC,KAAMC,EAAOC,UAAW,OAAO,IAAIlD,SAAQ,SAAUV,EAASC,GAAU,IAAIF,EAAMsB,EAAGwC,MAAMJ,EAAME,GAAO,SAASzD,EAAMK,GAAST,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAAU,SAASJ,EAAO2D,GAAOhE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAS2D,GAAQ5D,OAAM6D,QAmG3W,OAJA,SAAgBC,GACd,OAAO1C,EAAQuC,MAAMH,KAAME,YAlFvB,GAuFRK,KAAM,MACNC,SAAS,EACTnD,UAAWA","file":"static/js/31.300c657f.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar walletConnectIcon = \"\\n  <svg \\n    height=\\\"25\\\" \\n    viewBox=\\\"0 0 40 25\\\" \\n    width=\\\"40\\\" \\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  >\\n  <path d=\\\"m8.19180572 4.83416816c6.52149658-6.38508884 17.09493158-6.38508884 23.61642788 0l.7848727.76845565c.3260748.31925442.3260748.83686816 0 1.15612272l-2.6848927 2.62873374c-.1630375.15962734-.4273733.15962734-.5904108 0l-1.0800779-1.05748639c-4.5495589-4.45439756-11.9258514-4.45439756-16.4754105 0l-1.1566741 1.13248068c-.1630376.15962721-.4273735.15962721-.5904108 0l-2.68489263-2.62873375c-.32607483-.31925456-.32607483-.83686829 0-1.15612272zm29.16903948 5.43649934 2.3895596 2.3395862c.3260732.319253.3260751.8368636.0000041 1.1561187l-10.7746894 10.5494845c-.3260726.3192568-.8547443.3192604-1.1808214.0000083-.0000013-.0000013-.0000029-.0000029-.0000042-.0000043l-7.6472191-7.4872762c-.0815187-.0798136-.2136867-.0798136-.2952053 0-.0000006.0000005-.000001.000001-.0000015.0000014l-7.6470562 7.4872708c-.3260715.3192576-.8547434.319263-1.1808215.0000116-.0000019-.0000018-.0000039-.0000037-.0000059-.0000058l-10.7749893-10.5496247c-.32607469-.3192544-.32607469-.8368682 0-1.1561226l2.38956395-2.3395823c.3260747-.31925446.85474652-.31925446 1.18082136 0l7.64733029 7.4873809c.0815188.0798136.2136866.0798136.2952054 0 .0000012-.0000012.0000023-.0000023.0000035-.0000032l7.6469471-7.4873777c.3260673-.31926181.8547392-.31927378 1.1808214-.0000267.0000046.0000045.0000091.000009.0000135.0000135l7.6473203 7.4873909c.0815186.0798135.2136866.0798135.2952053 0l7.6471967-7.4872433c.3260748-.31925458.8547465-.31925458 1.1808213 0z\\\" \\n        fill=\\\"#3b99fc\\\"/>\\n  </svg>\\n\";\n\nfunction walletConnect(options) {\n  var infuraKey = options.infuraKey,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg;\n  return {\n    name: label || 'WalletConnect',\n    svg: svg || walletConnectIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(helpers) {\n        var resetWalletState, _yield$import, WalletConnectProvider, provider;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetWalletState = helpers.resetWalletState;\n                _context.next = 3;\n                return import('@walletconnect/web3-provider');\n\n              case 3:\n                _yield$import = _context.sent;\n                WalletConnectProvider = _yield$import[\"default\"];\n                provider = new WalletConnectProvider({\n                  infuraId: infuraKey\n                });\n                provider.autoRefreshOnNetworkChange = false;\n                provider.wc.on('disconnect', function () {\n                  resetWalletState({\n                    disconnected: true,\n                    walletName: 'WalletConnect'\n                  });\n                });\n                return _context.abrupt(\"return\", {\n                  provider: provider,\n                  \"interface\": {\n                    name: 'WalletConnect',\n                    connect: function connect() {\n                      return new Promise(function (resolve, reject) {\n                        provider.enable().then(resolve)[\"catch\"](function () {\n                          return reject({\n                            message: 'This dapp needs access to your account information.'\n                          });\n                        });\n                      });\n                    },\n                    address: {\n                      onChange: function onChange(func) {\n                        provider.send('eth_accounts').then(function (accounts) {\n                          return accounts[0] && func(accounts[0]);\n                        });\n                        provider.on('accountsChanged', function (accounts) {\n                          return func(accounts[0]);\n                        });\n                      }\n                    },\n                    network: {\n                      onChange: function onChange(func) {\n                        provider.send('eth_chainId').then(func);\n                        provider.on('chainChanged', func);\n                      }\n                    },\n                    balance: {\n                      get: function get() {\n                        return new Promise(function (resolve) {\n                          if (!provider.wc._accounts[0]) {\n                            resolve(null);\n                            return;\n                          }\n\n                          provider.send('eth_getBalance', [provider.wc._accounts[0], 'latest']);\n                        });\n                      }\n                    },\n                    disconnect: function disconnect() {\n                      provider.wc.killSession();\n                      provider.stop();\n                    }\n                  }\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'sdk',\n    desktop: true,\n    preferred: preferred\n  };\n}\n\nexport default walletConnect;"],"sourceRoot":""}